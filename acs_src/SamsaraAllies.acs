int activetokenselectors[CLASSCOUNT];
int pickrandos = 0;

#define MISC_MAX_GAME_TYPES 9

str miscCharGameTypesStr[9] =
		{	"samsara_misccharspawn_duke3d", "samsara_misccharspawn_blood", "samsara_misccharspawn_strife", "samsara_misccharspawn_rmr", 
			"samsara_misccharspawn_halflife", "samsara_misccharspawn_sw", "samsara_misccharspawn_rr", "samsara_misccharspawn_quake2", 
			"samsara_misccharspawn_hexen2" };
			

Script "DetermineValidSpawn" (void)
{
	for(int a = 512; a <= 0.5; a+=1024)
	{
		for(int b = 512; b <= 0.5; b+=1024)
		{
			if(GetCVar("samsara_zscriptready") == 1)
				SpawnForced("DetermineValidCellZS",a*1.0,b*1.0,0,0);
			else
				SpawnForced("DetermineValidCell",a*1.0,b*1.0,0,0);
			if(b > 0)
				b = -b - 1024;
			else
				b = -b;			
		}
		if(a > 0)
			a = -a - 1024;
		else
			a = -a;	
	}	
}

script "CellDoneScanning" (void)
{
	int newtid = UniqueTid();
	for(int a = -512; a < 512; a+=64)
	{
		for(int b = -512; b < 512; b+=64)
		{
			if(random(0,1500) <= (pow(GetCvar("samsara_randomcharacters"),2)/10))
			{	
				SpawnForced("DetermineValidSpawnTestObject",GetActorX(0)+(a*1.0),GetActorY(0)+(b*1.0),0,newtid);
				if(GetCVar("samsara_zscriptready") == 1)
					Spawn("DetermineValidSpawnZS",GetActorX(0)+(a*1.0),GetActorY(0)+(b*1.0),GetActorFloorZ(newtid),0);
				else
					Spawn("DetermineValidSpawn",GetActorX(0)+(a*1.0),GetActorY(0)+(b*1.0),GetActorFloorZ(newtid),0);
			}
		}
	}
}

script "IsThisSpawnSpotorCell" (int type)
{
	if(type == 0)
		SetResultValue(GetActorClass(0)=="DetermineValidCell");
	else
		SetResultValue(GetActorClass(0)=="DetermineValidSpawn");
}

script "HeroOnMap" Open
{
	//Because single player only means offline, we must check for individual game modes that must be excluded, unfortunately
	if(isLMS() || isDeathMatch() || isInvasion() || isInvasion() || isFreeForAll() || isTeamGame()) { terminate; }

	int clients = PlayerCount();
	int playervalue;
	int setBasedSpawns = GetCvar("samsara_misccharacterspawnmode");
	
	for(int a = 0; a < CLASSCOUNT; a++)
	{
		activetokenselectors[a] = 0;
	}
	
	for(int p = 0; p < clients; p++)
	{	
		if(PlayerInGame(p) == true)
		{
			for(int b = 0; b < CLASSCOUNT; b++)
			{
				if(PlayerClass(p) == b)
				{
					activetokenselectors[b] = 1;
					if(b == 5 || b == 10 || b == 11 || b == 14 || b == 19 || b == 20 || b == 23 || b == 24 || b == 25 || setBasedSpawns == 1 )
						pickrandos = 1;
				}
			}
		}
		else
		{
			clients += 1;
		}
	}
	
	if(pickrandos == true)
		ACS_NamedExecuteWithResult("DetermineValidSpawn",0,0,0,0);
}

Script "Samsara2689" (void)  //2689
{
	int randomAngle = random(0,256);
	SetActorAngle(0,randomAngle<<8);
	ThrustThing(randomAngle,random(16,32),0,0);
	Delay(1);
	
	switch(GetCvar("samsara_misccharacterspawnmode"))
	{
		case 0:
			while(true)
			{
				int a, b;
				
				if(activetokenselectors[a] == true)
				{
					switch(a)
					{
						default:
							break;
						case 5:
							SpawnSpotFacing("Duke3DBabe", 0, 0);
							break;
						case 10:
							if(random(0,2) <= 1)
								SpawnSpotFacing("BloodInnocentMime", 0, 0);	
							else
								SpawnSpotFacing("BloodInnocentMoron", 0, 0);
							break;
						case 11:
							SpawnSpotFacing("StrifePeasant", 0, 0);	
							break;
						case 14:
							if(random(0,2) <= 1)
								SpawnSpotFacing("RMRLDFGuard", 0, 0);
							else
								SpawnSpotFacing("RMRLDFMilitia", 0, 0);
							break;
						case 19:
							if(random(0,2) <= 1)
								SpawnSpotFacing("HLScientist", 0, 0);
							else
								SpawnSpotFacing("HLSecurityGuard", 0, 0);
							break;
						case 20:
							if(random(0,2) == 0 && onLiquid(0) == 1)
								SpawnSpotFacing("SW_WashGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_MechanicGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_CarGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_MoonGirl", 0, 0);
							else
								SpawnSpotFacing("SWPruneGirlSpawner", 0, 0);
							break;
						case 23:
							if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Chicken", 0, 0);
							else if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Pig", 0, 0);
							else if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Cow", 0, 0);
							else
								SpawnSpotFacing("RRBanjoConcert", 0, 0);
							break;
						case 24:
							SpawnSpotFacing("Q2Insane", 0, 0);
							break;
						case 25:
							SpawnSpotFacing("Hexen2_Sheep", 0, 0);
							break;
					}
					Thing_Remove(0);
					terminate;
				}
				else
					a = random(0,CLASSCOUNT);
				}
			break;
		case 1:
		{
			int maxSetsEnabled = 0;
			int activeSets = 0;
			int pickFromSets[MISC_MAX_GAME_TYPES]; 
			int amountOfGameTypes[MISC_MAX_GAME_TYPES];
			int bitindex, miscCharacterA, miscCharacterB, miscCharacterP;
			int setselect;
			
			for(miscCharacterB = 0; miscCharacterB < MISC_MAX_GAME_TYPES; miscCharacterB++)
			{
				if(GetCvar(miscCharGameTypesStr[miscCharacterB]))
				{
					bitindex = pow(2,miscCharacterB);
					if(!(activesets & bitindex))
					{
						activesets += bitindex;
						pickFromSets[maxSetsEnabled] = miscCharacterB;
						maxSetsEnabled++;
					}
					
					if(PlayerClass(miscCharacterP) == b && PlayerInGame(miscCharacterP))
					{
					switch(miscCharacterB)
					{
						default: break;
						case 0:
							SpawnSpotFacing("Duke3DBabe", 0, 0);
							break;
						case 1:
							if(random(0,2) <= 1)
								SpawnSpotFacing("BloodInnocentMime", 0, 0);	
							else
								SpawnSpotFacing("BloodInnocentMoron", 0, 0);
							break;
						case 2:
							SpawnSpotFacing("StrifePeasant", 0, 0);	
							break;
						case 3:
							if(random(0,2) <= 1)
								SpawnSpotFacing("RMRLDFGuard", 0, 0);
							else
								SpawnSpotFacing("RMRLDFMilitia", 0, 0);
							break;
						case 4:
							if(random(0,2) <= 1)
								SpawnSpotFacing("HLScientist", 0, 0);
							else
								SpawnSpotFacing("HLSecurityGuard", 0, 0);
							break;
						case 5:
							if(random(0,2) == 0 && onLiquid(0) == 1)
								SpawnSpotFacing("SW_WashGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_MechanicGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_CarGirl", 0, 0);
							else if(random(0,9)<=3)
								SpawnSpotFacing("SW_MoonGirl", 0, 0);
							else
								SpawnSpotFacing("SWPruneGirlSpawner", 0, 0);
							break;
						case 6:
							if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Chicken", 0, 0);
							else if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Pig", 0, 0);
							else if(random(0,1) == 1)
								SpawnSpotFacing("RedneckRampage_Cow", 0, 0);
							else
								SpawnSpotFacing("RRBanjoConcert", 0, 0);
							break;
						case 7:
							SpawnSpotFacing("Q2Insane", 0, 0);
							break;
						case 8:
							SpawnSpotFacing("Hexen2_Sheep", 0, 0);
							break;
					}
					}
					Thing_Remove(0);
					terminate;
				}
			}
		}
		break;
	}
}

Script "AllyCellPhone" ENTER
{
	If(CheckInventory("HexenClass") || CheckInventory("RoTTClass") || CheckInventory("POGreedClass") || CheckInventory("EradClass") || CheckInventory("RRClass"))
	{
		if(!CheckInventory("AllyCellPhone") && CheckInventory("KillCountBar") == 250 && !CheckInventory("CellPhoneGiven"))
		{
			GiveInventory("AllyCellPhone", 1);
			GiveInventory("CellPhoneGiven", 1);
		}
		else if(CheckInventory("CellPhoneGiven") && !CheckInventory("AllyCellPhone"))
		{
			TakeInventory("CellPhoneGiven", 1);
			TakeInventory("KillCountBar", 250);
		}
		delay(1);
		restart;
	}
	else
	{
		terminate;
	}
}

str rottdropstrings[5] = {"DropIan","DropTaradino","DropThi","DropLorelei","DropDoug"};
str hexendropstrings[2] = {"DropFighter","DropMage"};
str hexenmagedropstrings[2] = {"DropFighter","DropCleric"};
str hexenfighterdropstrings[2] = {"DropCleric","DropMage"};
str eradicatordropstrings[3] = {"DropDan","DropKamechak","DropMarine"};
str ipogdropstrings[4] = {"DropCyborg","DropLizard","DropSpecimen","DropDominatrix"};

Script "Samsara2999" (int class, int mode)
{
	int resultcounter = 0;	
	int maxallies = 2;
	if(class == 1)
		mode = ceilZandronum((mode*1.0)/100); //the shit I have to do to cleanup Zandronum's mistakes
	
	Switch(class)
	{
		Case 1:	
		maxallies = 5;
		For(int a = 0; a < 36; a++)
		{
			Delay(1);
			If(a==35)
			{
				if(resultcounter == maxallies)
				{
					SetActorState(0,"Death",TRUE);
					terminate;
				}
				
				if(mode != resultcounter)
				{
					//PrintBold(d:resultcounter);
					SetActorState(0,rottdropstrings[resultcounter],TRUE);
				}
					
				a=0;
				resultcounter++;
			}
		}
		break;
		Case 2:	
		maxallies = 2;
		For(int b = 0; b < 36; b++)
		{
			Delay(1);
			If(b==35)
			{
				If(resultcounter == maxallies)
				{
					SetActorState(0,"Death",TRUE);
					terminate;
				}
				switch(mode)
				{
					case 1:
						SetActorState(0,hexenmagedropstrings[resultcounter],TRUE);
						b=0;
						resultcounter++;
						break;
					case 2:
						SetActorState(0,hexenfighterdropstrings[resultcounter],TRUE);
						b=0;
						resultcounter++;
						break;
					default:
						SetActorState(0,hexendropstrings[resultcounter],TRUE);
						b=0;
						resultcounter++;
						break;
				}
			}
		}
		break;
		Case 3:	
		maxallies = 3;
		For(int c = 0; c < 36; c++)
		{
			Delay(1);
			If(c==35)
			{
				If(resultcounter == maxallies)
				{
					SetActorState(0,"Death",TRUE);
					terminate;
				}
				SetActorState(0,eradicatordropstrings[resultcounter],TRUE);
				c=0;
				resultcounter++;
			}
		}
		break;
		Case 4:	
		maxallies = 4;
		For(int d = 0; d < 36; d++)
		{
			Delay(1);
			If(d==35)
			{
				If(resultcounter == maxallies)
				{
					SetActorState(0,"Death",TRUE);
					terminate;
				}
				SetActorState(0,ipogdropstrings[resultcounter],TRUE);
				d=0;
				resultcounter++;
			}
		}
		break;
	}
}

Script "Samsara_AllyBeaconDrops" (void)
{
	switch (samsaraClassNum())
	{
		case CLASS_ROTT:
			SetResultValue(CheckInventory("RottMode"));
			break;
	}
}

Script "Samsara_AllySwitch" (void)
{
	int activator = ActivatorTid();
	int playeractivator = ActivatorTid();
	int newtid = UniqueTid();
	Thing_ChangeTid(0,newtid);
	SetActivator(0,AAPTR_Master);
	int pln = PlayerNumber();
	int playertid = UniqueTid();
	int newtid2 = UniqueTid();
	Thing_ChangeTid(0,playertid);
	switch(PlayerClass(pln))
	{
		case 4:
			if(GetUserCvar(pln,"samsara_cl_hexclass")==0)
			{
				if(CheckActorClass(newtid,"ClericAlly"))
				{
					SpawnSpotFacingForced("FighterAlly",newtid,newtid2);
				}
				else
					terminate;
			}
			else if(GetUserCvar(pln,"samsara_cl_hexclass")==1)
			{
				if(CheckActorClass(newtid,"MageAlly"))
				{
					SpawnSpotFacingForced("ClericAlly",newtid,newtid2);
				}
				else
					terminate;
			}
			else if(GetUserCvar(pln,"samsara_cl_hexclass")==2)
			{
				if(CheckActorClass(newtid,"FighterAlly"))
				{
					SpawnSpotFacingForced("MageAlly",newtid,newtid2);
				}
				else
					terminate;
			}
			break;
		case 8:
			switch(GetUserCvar(pln,"samsara_cl_rottmode"))
			{
				Case 0:
					if(CheckActorClass(newtid,"IanPaulFreeley"))
					{
						SpawnSpotFacingForced("DougWendt",newtid,newtid2);
					}
					else
						terminate;
					break;
				Case 1:
					if(CheckActorClass(newtid,"TaradinoCassatt"))
					{
						SpawnSpotFacingForced("IanPaulFreeley",newtid,newtid2);
					}
					else
						terminate;
					break;
				Case 2:
					if(CheckActorClass(newtid,"ThiBarret"))
					{
						SpawnSpotFacingForced("TaradinoCassatt",newtid,newtid2);
					}
					else
						terminate;
					break;
				Case 3:
					if(CheckActorClass(newtid,"LoreleiNi"))
					{
						SpawnSpotFacingForced("ThiBarret",newtid,newtid2);
					}
					else
						terminate;
					break;
				Case 4:
					if(CheckActorClass(newtid,"DougWendt"))
					{
						SpawnSpotFacingForced("LoreleiNi",newtid,newtid2);
					}
					else
						terminate;
					break;
			}
			break;
	}
	SetActorAngle(newtid2,GetActorAngle(newtid));
	Thing_SetTranslation(newtid2,-1);
	SetActivator(newtid2,AAPTR_DEFAULT);
	SetPointer(AAPTR_MASTER,playertid);
	Thing_Remove(newtid);
	Thing_ChangeTid(playertid,playeractivator);
	Thing_ChangeTid(0,activator);
}

Script "Samsara_BeaconSpawner" (int mode)
{
	int pln = PlayerNumber();
	int newtid = UniqueTid();
	int playertid = UniqueTid();
	int activator = ActivatorTid();
	Thing_ChangeTid(0,playertid);
	switch(PlayerClass(pln))
	{
		case 4:
			switch(mode)
			{
				case 0:
					SpawnForced("StrifeBeaconHexen_Allies",GetActorX(0),GetActorY(0),GetActorZ(0),newtid);
					Thing_SetTranslation(newtid,-1);
					SetActivator(newtid,AAPTR_DEFAULT);
					SetPointer(AAPTR_MASTER,playertid);
					break;
				case 1:
					SpawnForced("StrifeBeaconHexenMage_Allies",GetActorX(0),GetActorY(0),GetActorZ(0),newtid);
					Thing_SetTranslation(newtid,-1);
					SetActivator(newtid,AAPTR_DEFAULT);
					SetPointer(AAPTR_MASTER,playertid);
					break;
				case 2:
					SpawnForced("StrifeBeaconHexenFighter_Allies",GetActorX(0),GetActorY(0),GetActorZ(0),newtid);
					Thing_SetTranslation(newtid,-1);
					SetActivator(newtid,AAPTR_DEFAULT);
					SetPointer(AAPTR_MASTER,playertid);
					break;
			}
			break;
		case 8:
			SpawnSpotForced("StrifeBeaconRott_Allies",0,newtid,0);
			SetActorAngle(newtid,CheckInventory("RottMode")*182);
			Thing_SetTranslation(newtid,-1);
			SetActivator(newtid,AAPTR_DEFAULT);
			SetPointer(AAPTR_MASTER,playertid);
			break;
	}
	Thing_ChangeTid(playertid,activator);
}

Script "Samsara_AllyCheckMaster" (void)
{
	SetResultValue(SetActivator(0,AAPTR_MASTER));
}

Script "CellPhoneHax" (int mode) //2560
{
	Switch(mode)
	{
		Case 0:
			Delay(160);
			GiveInventory("AllyCellPhoneHax1",1);
			break;
		Case 1:
			Delay(160);
			GiveInventory("AllyCellPhoneHax2",1);
			break;
	}
}

Script "Samsara_AllyHealthRegen" (void)
{
	While(GetActorProperty(0, APROP_Health) > 0)
	{
		HealThing(1);
		Delay(35);
	}
}