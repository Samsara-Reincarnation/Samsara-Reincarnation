int KilledOracle = 0;
int AwakenSpectres = 0;
int SpectreTarget;

#define ACCURACYCOUNT   10
#define SIGILCOUNT      5

int SigilSplinters[SIGILCOUNT] = 
{
    "SigilSplinter1",
    "SigilSplinter2",
    "SigilSplinter3",
    "SigilSplinter4",
    "SigilSplinter5",
};

int SpectralTogglers[SIGILCOUNT] = 
{
    "SigilInventoryWeapon1",
    "SigilInventoryWeapon2",
    "SigilInventoryWeapon3",
    "SigilInventoryWeapon4",
    "SigilInventoryWeapon5",
};

int BeaconMonsters[CLASSCOUNT] = 
{
    "FriendlyDoomImp",
    "FriendlyFlemoid",
    "FriendlyNitrogolem",
    "FriendlyNazi",
    "FriendlyAfrit",
    "FriendlyAlienTrooper",
    "FriendlyPfhorTrooper",
    "FriendlyGrunt",
	"FriendlyLowGuard",
    "FriendlySectorPatrol",
    "FriendlyBrownCultist",
	"FriendlySuperRebelSpawner",		
    "FriendlyHSD",
    "FriendlyAnimatedProbe",	
    "FriendlyUNBluesuit",	
    "FriendlyStarTrooper",	
	"FriendlyRobotGuard", //+Added
    "FriendlyTerroristDroid", //+Added
	"FriendlyMinoDrake", //+Added
	"FriendlyBarney", //+Added
	"FriendlyFatAss", //+Added
	"FriendlyCMTrooper", //+Added
	"FriendlyAnubisWarrior", //+Added
	"FriendlyTurdMinion", //+Added
	"FriendlyRobotGuard", //+Added
    "",
    "",
    ""
};

int AccuracyUniques[CLASSCOUNT][ACCURACYCOUNT] = 
{
    {"DoomZerkCounter",               "",                       "", "", "", "", "", "", "", ""},
    {"ChexSoulsphere",                "",                       "", "", "", "", "", "", "", ""},
    {"CorvusStrifeUnique",            "",                       "", "", "", "", "", "", "", ""},
    {"WolfStrifeUnique",              "",                       "", "", "", "", "", "", "", ""},
    {"PortMysticAmbit",               "",                       "", "", "", "", "", "", "", ""},
    {"DukeStrifeUnique",              "",                       "", "", "", "", "", "", "", ""},
    {"RandAlienWeapon",               "",                       "", "", "", "", "", "", "", ""},
    {"Laser Cannon",                  "StrifeAccuracyMaxCells", "", "", "", "", "", "", "", ""},
    {"ROTTStrifeUnique",              "",                       "", "", "", "", "", "", "", ""},
    {"BlakeRefill",                   "",                       "", "", "", "", "", "", "", ""},
    {"CalebStrifeUnique",             "",                       "", "", "", "", "", "", "", ""},
    {"StrifeguyStrifeUnique",         "",                       "", "", "", "", "", "", "", ""},
    {" Eradicator Enhancement Chip ", "",                       "", "", "", "", "", "", "", ""},
    {"C7StrifeUnique",                "",                       "", "", "", "", "", "", "", ""},
    {"RMRStrifeUnique",               "",                       "", "", "", "", "", "", "", ""},
    {"KatarnSupercharge",             "",                       "", "", "", "", "", "", "", ""},
	{"IPOGRandomItemGenerator",       "",                       "", "", "", "", "", "", "", ""},
	{"JackStrifeUnique",              "",                       "", "", "", "", "", "", "", ""},
	{"WTStrengthPhial",               "",                       "", "", "", "", "", "", "", ""},
	{"HalfLifeStrifeUnique",          "",                       "", "", "", "", "", "", "", ""},
	{"LoWangStrifeUnique",            "",                       "", "", "", "", "", "", "", ""},
	{"RandomMagicItem",               "",                       "", "", "", "", "", "", "", ""},
	{"Ring of RA",                    "StrifeAccuracyMaxCells", "", "", "", "", "", "", "", ""},
	{"LeonardStrifeUnique",           "",                       "", "", "", "", "", "", "", ""},
	{"BittermanStrifeUnique",         "",                       "", "", "", "", "", "", "", ""},
	{"DemonessStrifeUnique",          "",                       "", "", "", "", "", "", "", ""},
	{"BondStrifeUnique",              "",                       "", "", "", "", "", "", "", ""},
	{"Catacomb_RandomGem",            "",                       "", "", "", "", "", "", "", ""}
};

int DoomAccuracyZerks[ACCURACYCOUNT] = 
{
    "DoomguyStrifeZerk1",
    "DoomguyStrifeZerk2",
    "DoomguyStrifeZerk3",
    "DoomguyStrifeZerk4",
    "DoomguyStrifeZerk5",
    "DoomguyStrifeZerk6",
    "DoomguyStrifeZerk7",
    "DoomguyStrifeZerk8",
    "DoomguyStrifeZerk9",
    "DoomguyStrifeZerk0"
};

int AccuracyMessages[CLASSCOUNT][MAXMODES][MSGCOUNT] = 
{
    {
		{
            "You grow more berserk.",
            "You're not actually getting angrier. You're just punching more accurately.",
            "Fuck your accuracy training shit!",
            "Yes... Channel your anger...",
            "How does that even work?",
            "Well, if you insist on using your fists...",
            "I'm sure those reinforced steel robots are trembling over your fleshy hands.",
            "Let's settle this dispute like gentlemen! Or kill each other. Both work.",
            "It was a ruse! You were secretly in a boxing match all along!",
            "Don't get too cocky, Mikey.",
		},
		{
            "You grow more berserk.\nIt seems like you were given something that shouldn't have been touched...",
            "You're not actually getting angrier. You're just punching more accurately.",
            "Fuck your accuracy training shit!",
            "Yes... Channel your anger...",
            "How does that even work?",
            "Well, if you insist on using your fists...",
            "I'm sure those reinforced steel robots are trembling over your fleshy hands.",
            "Let's settle this dispute like gentlemen! Or kill each other. Both work.",
            "It was a ruse! You were secretly in a boxing match all along!",
            "Don't get too cocky, Mikey.",
		},
    },
    {{
        "Supercharge breakfast!",
        "OM NOM NOM NOM",
        "Because medikits are for wimps.",
        "Crunchy.",
        "Chex marks the spot!",
        "Is this cannibalism or what?",
        "It's milk you can chew!",
        "Free breakfast with every training!",
        "How generous of him to provide you breakfast, too.",
        "So, uh, where did you get the milk from? The cows are dead.",
    }},
    {{
        "Tome of Power, Grim Ballista, or Morph Ovum",
        "Death of a thousand papercuts!",
        "I'm totally going to kick your ass, guys, just let me finish this paragraph.",
        "It's actually a romance novel. The 'power' refers to something else entirely.",
        "The heartbeat means it's happy to see you.",
        "Death by spittle from sneezing ghosts.",
        "So haunted it belongs on eBay.",
        "Parthoris Fried Chicken.",
        "Because nothing's better than turning a templar harmless.",
        "I'm sure there's hundreds of egg puns you can use.",
    }},
    {
		{
			"Extra Life",
			"Maybe now you can go to college.",
			"Works in Zandronum!",
			"One day, the villains will learn how to respawn, too.",
			"Now you can hug a giant metal robot with no repercussions.",
			"Good for the soul, too.",
			"Go ahead, taunt those inquisitors.",
			"Being stopped? \cgNah\c-.",
			"",
			"",
		},
		{
			"Extra Life",
			"Maybe now you can go to college.",
			"Works in Zandronum!",
			"One day, the villains will learn how to respawn, too.",
			"Now you can hug a giant metal robot with no repercussions.",
			"Good for the soul, too.",
			"Go ahead, taunt those inquisitors.",
			"Being stopped? \cgNah\c-.",
			"",
			"",
		},
		{
			"Flamethrower, Portable MG42, or Scoped Kar98k Rifle",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
			"",
		},
    },
    {{
        "Mystic Ambit Incant",
        "Heal plz.",
        "Warning: Not for use in deathmatch.",
        "A crowd on demand.",
        "Well, you're a cleric. Gotta have a heal.",
        "Plot twist: it's a badly-inscribed poison spell.",
        "Were these things actually used in Hexen?",
        "This would probably be more useful if Strife could do coop.",
        "The rebels already have a doctor...",
        "",
		},
{
        "Disc of Repulsion",
        "Hey! Personal space, asshole!",
        "Careful not to use it on your friends.",
        "2011 called. It wants its Hexen slot 1 back.",
        "You need to play keep away because your dumbass didn't bring a sword.",
        "The enemies will kill each other if they bump into each other.",
        "",
        "",
        "",
        "",
    },
	{
        "Dark Servant",
        "I am the summoner and the fighter.",
        "Moo Moo, motherfucker!",
        "Two's a crowd.",
        "I'm about to clean this place up real quick.",
        "Hey, it's that one boss from Heretic!",
        "Beta Ray Bill?",
        "",
        "",
        "",
    }},	
    {
		{
			"Jetpack, Shrinker, or Expander!",
			"I believe I can touch the sky.",
			"Guaranteed to make friends with mappers.",
			"And this is why Virus will never be in.",
			"Because you have that on your sprite for a reason.",
			"Watch your ass, the jet burns.",
			"The gas mileage is \caterrible\c-.",
			"Corvus and the Hexen characters want their Wings of Wrath back.",
			"What's that? You can only move in two dimensions?",
			"And fuck you, too, fall damage.",
		},
		{
			"Jetpack, Shrinker Voodoo Ring, or Expander Voodoo Ring!",
			"I believe I can touch the sky.",
			"Guaranteed to make friends with mappers.",
			"And this is why Virus will never be in.",
			"Because you have that on your sprite for a reason.",
			"Watch your ass, the jet burns.",
			"The gas mileage is \caterrible\c-.",
			"Corvus and the Hexen characters want their Wings of Wrath back.",
			"What's that? You can only move in two dimensions?",
			"And fuck you, too, fall damage.",
		},
    },
    {{
        "UNKNOWN WEAPON CLASS system error 0xfded",
        "The difference between a room of aliens and a carpet of them.",
        "What fun to watch you work.",
        "~text interface term\ciinal malfunction error \cd~2992dud",
        "your former self destroyed the dreaming way is eased",
        "down to the crushing center and spared the dance of forever",
        "This will allow you to kill more aliens. Does that make you happy?",
        "shedding all the weight of imagined moments and fear",
        "because fear is not the blood",
        "I know who you are.",
    }},
    {{
        "You got the Laser Cannon.",
        "If this were in vanilla Quake, it would be slot 6. \ckbut alas",
        "Are any of the weapon designs in Quake even practical?",
        "Do not aim at face. Not that it'll help.",
        "Does it come in blueberry?",
        "What is this, Star Wars?",
        "Bouncy red death!",
        "Pewpewlasers!",
        "Ia ia fhtagn, you flying squash.",
        "Ia ia fhtagn, you floating flower pot.",
    }},
	{ // Rott
		{	
			"You picked up the Excalibat! Or maybe you snagged a Split Missile! Or maybe you wield the Dark Staff!",
			"Baseball time!",
			"Here catch!",
			"I'm off to a field run.",
			"Woah, this bat is as old as El Oscuro!",
			"They'll have a heckuva year if their chest holds out!",
			"You Snagged a Split Missile Launcher.",
			"Woah look, it just split into two! And so will you.",
			"Two at a time ladies, I got one for you both.",
			"Magical splitting of rockets... Doomguy's all jelly over this!",
		},
		{	
			"You picked up the Excalibat! Or maybe you snagged a Split Missile! Or maybe you wield the Dark Staff!",
			"Baseball time!",
			"Here catch!",
			"I'm off to a field run.",
			"Woah, this bat is as old as El Oscuro!",
			"They'll have a heckuva year if their chest holds out!",
			"You Snagged a Split Missile Launcher.",
			"Woah look, it just split into two! And so will you.",
			"Two at a time ladies, I got one for you both.",
			"Magical splitting of rockets... Doomguy's all jelly over this!",
		},
		{	
			"You picked up the Excalibat! Or maybe you snagged a Split Missile! Or maybe you wield the Dark Staff!",
			"Baseball time!",
			"Here catch!",
			"I'm off to a field run.",
			"Woah, this bat is as old as El Oscuro!",
			"They'll have a heckuva year if their chest holds out!",
			"You Snagged a Split Missile Launcher.",
			"Woah look, it just split into two! And so will you.",
			"Two at a time ladies, I got one for you both.",
			"Magical splitting of rockets... Doomguy's all jelly over this!",
		},
		{	
			"You picked up the Excalibat! Or maybe you snagged a Split Missile! Or maybe you wield the Dark Staff!",
			"Baseball time!",
			"Here catch!",
			"I'm off to a field run.",
			"Woah, this bat is as old as El Oscuro!",
			"They'll have a heckuva year if their chest holds out!",
			"You Snagged a Split Missile Launcher.",
			"Woah look, it just split into two! And so will you.",
			"Two at a time ladies, I got one for you both.",
			"Magical splitting of rockets... Doomguy's all jelly over this!",
		},
		{	
			"You picked up the Excalibat! Or maybe you snagged a Split Missile! Or maybe you wield the Dark Staff!",
			"Baseball time!",
			"Here catch!",
			"I'm off to a field run.",
			"Woah, this bat is as old as El Oscuro!",
			"They'll have a heckuva year if their chest holds out!",
			"You Snagged a Split Missile Launcher.",
			"Woah look, it just split into two! And so will you.",
			"Two at a time ladies, I got one for you both.",
			"Magical splitting of rockets... Doomguy's all jelly over this!",
		},
	},
	{
      {	// Blake
        "Ammo Recharge Pack",
        "I'm running out of ammo! You got some?",
        "Nothing like a long lasting battery.",
        "Eco-friendly!",
        "You know this is going straight to cells.",
        "Figured you would be running out of ammo a lot.",
        "Isn't this just a normal ammo pickup?",
        "",
        "",
        "",
    },
      {	
        "Ammo Recharge Pack",
        "I'm running out of ammo! You got some?",
        "Nothing like a long lasting battery.",
        "Eco-friendly!",
        "You know this is going straight to cells.",
        "Figured you would be running out of ammo a lot.",
        "Isn't this just a normal ammo pickup?",
        "",
        "",
        "",
		},
    },	
    {{	// Caleb
        "Picked up Voodoo Doll, Guns Akimbo, or Spray Can.",
        "I got two guns. That should be enough for all of ya!",
        "But wait, he can't surely have two, can he?",
        "AHAHAHAHAHA!",
        "Aww, what an adorable doll. It looks just like you.",
        "I wonder what happens if I pull it like this....",
        "This is how they take out wasp nests down south.",
        "Don't try this at home.",
        "Gotta do something with all this surplus deodorant.",
        "Picked up the Gambit's Essence!",
    }},
    {{ // Strifeguy
        "Training complete!",
        "Maybe now you'll actually learn how to aim.",
        "Maybe you won't blow yourself with those missiles.",
        "Because Strife is an RPG kinda game.",
        "Just a few more, and maybe that crossbow will be worth a damn.",
        "",
        "",
        "",
        "",
        "",
    }},	
	// Eleena uniques - Added this.
    {{
        "Weapon Enhancement Chip",
        "Cat credit card!",
        "So I just plug this in, and it does stuff?",
        "I installed ram into my gun.",
        "You got the SSD of Power!",
        "Maybe now my PC can run Crysis.",
        "",
        "",
        "",
        "",
	}},
    {{ // C7
        "Proximity Mines",
        "I've lost a bomb! Do you have it?",
        "I like to sit on my pancakes. *boom*",
        "Warning: Improper use of explosives will lead to a missing thigh.",
        "Time to be a dick to everyone involved.",
        "Boom time!",
        "",
        "",
        "",
        "",
    }},	
    {{ // RMR
        "Oxygen Recycler or Jet Pack",
        "Take a deep breathe.",
        "What!? No one else needs oxygen out here.",
        "You got a self-heal or jetpack. Daring, are we?",
        "Breathing oxygen heals bullet wounds, I guess.",
        "Who do you think you are? Duke Nukem?",
        "",
        "",
        "",
        "",
    }},
    {{ //Katarn
        "Weapon Supercharge!",
        "Lock and load! Lock and load your guns!",
        "Oooh, here comes the fire rate!",
        "I'm the man! I'm supercharged!",
        "Yes, a small item makes your guns shoot twice as fast without overheating, because reasons.",
        "What is this, Quake?",
        "",
        "",
        "",
        "",
    }},	
	{{ "Random item!","C'mon, no whammies!","Get a clue!","Hope I get something good this time.","Nothing quite like gambling on the battlefield.","I bet that mutant guy had better luck.","I've got a poker face like nobody else.","Hope I get one of those pills.","","",}},	
    {{ "Picked up Blast.","You're a psychic, gotta have your powers.","Watch me 'splode this sucker with my mind.","About 3 times better than MindJack.","BioShock when?","Gotta get my brain drugz.","Will they try to pick this out of my nose with a grabby claw?","","","",}},	
	{{ "Strength Potion","You drank a bottle of Mountain Dew!","Yuck, this potion tastes nasty!","The liquid equivalent of anabolic steroids.","Why does Grondoval drink random stuff he finds on the ground?","You could probably sell this for a couple of gold pieces.","How are you carrying all these potions, anyway?","","","",}},
	{{ "Unidentified throwable bioweapon, high velocity stealth crossbow, or power movement assist acquired.","Gordon Freeman: Dinosaur tranquilizer.","Do not pet the snarks.","These are not your friends. These are not pets.","Maybe one day this will fire hot rebar.","It's your bedtime.","Call me Ishmael, bitch!","Warning: Lethally annoying.","","",}, { "Hand Grenades, M40A1 Sniper Rifle, or Barnacle Grapple","Don't do drugs kids, or the terrorists win.","It's over Adrian. I have the AWPer hand.","What's a soldier without his grenades?","Hopefully that big orange fuck never gets a hold of these.","At least it's not tripmines.","FaZe Shephard.","MLG 420 Quickscopes!","","",}},	
	{{ "Ripper Heart, Heat Seeker Card, or Gas Bomb","Who want-a some Wang?","Two Wangs are better than one.","My heat seeking drivers won't install. Damn Windows updates!","There's no place like home!","What is in these hearts!?","Must have a lot of cholestoral to produce a whole person.","","","",}},	
	{{ "Icon of Mann-Ra","Now you play the magic lottery.","This is what makes your character shine.","Because your guns weren't much to write home about. What about magic?","You expect me to pull a rabbit out of my hat?","For my next trick, I'll saw you in half.","That's it, I found the darklight. Game's over.","","","",}},	
	{{ "The Ring of Ra","I cast bouncy fiyabawls!","Jazz hands!","It's one of those light up rings in happy meals!","Hope it hits something.","No no! You're supposed to punch people with it!","You have become a Yellow Lantern.","","","",}},	
	{{ "Huntin' Scope Rifle or Chicken Crossbow Ammo!!","I'm goin' redneck deer huntin'!","Bubba! Where'd you put the damn deer caller?","Aw shucks! I forgot to oil the bolt again!","Look out! It's the crazy chicken!","See? Chickens ain't no flightless birds, moran!","PETA will never take me alive! AHAHAHAHAHA!","Redneck Anti-air defense!","","",}},	
	{{
		"Grenade Launcher, Railgun, or ETF Rifle",
		//"Isn't this the Razorjack?",
		//"What goes around, comes around. Watch your head.",
		//"Not the most comfortable gun grip in the world.",
		"Defined instagib for a generation.",
		"SNIPER DUEL!",
		"Line em up, knock em down.",
		"We're back in Quake 1, folks!",
		"Here's a bitter pill!",
		"For Explosive-Tipped Flechettes, these don't do a lot of exploding.",
		"Is a much better use of your grenades.",
		"Really hit the nail on the head, there.",
		"Don't like the weapon you got? No problem, you also get double damage!",
    }},
	{{
		"You possess the Tome of Power or Force Cube.",
		"Hey, look who's back!",
		"You read one page, and it makes you feel murderous.",
		"Dangit, I'm shit at rubix cubes.",
		"If this thing summons a cenobite, I'll be pissed.",
		"With all these books, I should start a library.",
		"Now you too can have a pet box follow you around.",
		"",
		"",
		"",
    }},
	{{
		"Picked up a sniper rifle, silenced D5K, or watch gadgets with various mines.",
		"Is that a sleeping bag?",
		"Well, snipers are for campers.",
		"Now you don't have to choose between stealth and guns blazing.",
		"Oh my! Would you look at the time!",
		"Left the base without your gadgets again, 007?",
		"Oddjob + Proxy Mines = Ruined friendships.",
		"I'm not walking over there to pick up that item.",
		"",
		"",
    }},
	{{
		"Ring of Fire, Earth, Water, or Lightning",
		"One ring to rule them all. One ring to gib them.",
		"Cheap jewelry. Disintegrates off your hand after a minute!",
		"When I said I had ice on my fingers, I wasn't thinking it was literally ice!",
		"Sleek, fashionable, makes you shoot bouncy balls or some shit...",
		"I hope I get the cherry ring pop. That's the best one!",
		"Doesn't power any crystal ball or nothing.",
		"Maybe I'll add a red ring one day. Who knows?",
		"",
		"",
    }},
};

script "SamsaraStrifeAccuracy" (int which) //313 -- SAMSARA_STRIFEACCURACY
{
    if (which == -1) { which = CheckInventory("StrifeAccuracyCounter"); }
    which = middle(1, which, ACCURACYCOUNT) - 1;

    int pln = PlayerNumber();
    int pclass = samsaraClassNum();
    int unique = "";

    while (unique == "")
    {
        unique = AccuracyUniques[pclass][which];
        which--;
    }

    GiveInventory(unique, 1);

    ACS_NamedExecuteAlways("SamsaraClientAccuracy", 0, GetCVar("compat_silentpickup"),0,0);
}

script "SamsaraClientAccuracy" (int soundmode) clientside //314 -- SAMSARA_CLIENT_ACCURACY
{
    int pln = PlayerNumber(), cpln = ConsolePlayerNumber();
    int pclass = samsaraClassNum();
    int i, j, quoteCount = 0;
    int logMsg;
    
    if (cpln == pln)
    {
        if (GetCVar("samsara_cl_moremessages"))
        {
            for (i = 0; i < MSGCOUNT; i++)
            {
                j = AccuracyMessages[pclass][SamsaraAlternativeClass][i];
                if (!StrLen(j)) { continue; }
                
                QuoteStorage[quoteCount++] = j;
            }
            
            if (!quoteCount) { logMsg = "Oh bugger there's no messages for this unique."; }
            else { logMsg = QuoteStorage[random(0, quoteCount-1)]; }
        }
        else
        {
            logMsg = AccuracyMessages[pclass][SamsaraAlternativeClass][0];
            
            if (!StrLen(logMsg)) { logMsg = "Oh bugger there's no message for this unique."; } 
        }

        if (GetCVar("samsara_cl_printpickup")) { Print(s:logMsg); }
        else { Log(s:logMsg); }
    }
    
    if (soundmode == 1) { LocalAmbientSound(ClassUniqueSounds[pclass][SamsaraAlternativeClass], 127); }
    else { ActivatorSound(ClassUniqueSounds[pclass][SamsaraAlternativeClass], 127); }
    
    FadeRange(ClassFades[pclass][0], ClassFades[pclass][1], ClassFades[pclass][2], ClassFades[pclass][3],
    ClassFades[pclass][0], ClassFades[pclass][1], ClassFades[pclass][2], 0.0, itof(ClassFades[pclass][4]) / 35);
}

script "SamsaraBeacon" (int noloop) //315 -- SAMSARA_BEACON
{
    int pln, classnum, monType, monTID, success = 0;
    int beaconTID = defaultTID(0);
    int x = GetActorX(0), y = GetActorY(0), z = GetActorZ(0);

    SetActivatorToTarget(0);
    
    pln = PlayerNumber();
    classnum = samsaraClassNum();

    if (pln == -1)
    {
        SetActorState(beaconTID, "WhatAmIDoingWithMyLife");
        terminate;
    }

    monType = BeaconMonsters[classnum];

    SetActivator(beaconTID);

    while (!success)
    {
        monTID = unusedTID(14000, 24000);
        success = Spawn(monType, x, y, z, monTID);
        if (success) { SetPointerExt(AAPTR_Master,0,monTID); Spawn("StrifeTeleportFog", x, y, z); }

        if (noloop)
        {
            SetResultValue(success);

            if (!success) { SetActorState(beaconTID, "FuckYouImAPickup"); }
            terminate;
        }

        Delay(1);
    }
}

script "SamsaraSpectres" (int mode, int arg1, int arg2) //316 -- SAMSARA_SPECTRES
{
    int i,j,k,l, x,y,z;
    int result;

    switch (mode)
    {
      default:
        x = GetActorX(0);
        y = GetActorY(0);
        z = GetActorZ(0);

        for (i = 0; i < 50; i++)
        {
            j = unusedTID(5000, 10000);
            Spawn("AmmoSatchel", x,y,z, j);
            k = random(0, 1.0);
            l = random(0, 1.0);

            SetActorVelocity(j, 35 * FixedMul(cos(k), cos(l)), 35 * FixedMul(sin(k), cos(l)), 35 * sin(l), 0, 0);

            if (i % 4 == 0) { Delay(1); }
        }
        break;

      case 1:
        SamsaraGlobal[GLOBAL_SIGILBASE+1] = 1;
        Floor_LowerToLowest(999, 4);
        SetActivatorToTarget(0);
        GiveInventory("Communicator", 1);
        SendToCommunicator(95, 0, 0, 0);
        break;

      case 2:
        SamsaraGlobal[GLOBAL_SIGILBASE+2] = 1;
        SetActivatorToTarget(0);
        Print(l:"TXT_KILLED_BISHOP");
        GiveInventory("Communicator", 1);
        GiveInventory("QuestItem21", 1);
        SendToCommunicator(74, 0, 0, 0);
        break;

      case 3:
        SamsaraGlobal[GLOBAL_SIGILBASE+3] = 1;
        Door_Open(222, 8);
        KilledOracle = 1;        
        SetActivatorToTarget(0);
        GiveInventory("Communicator", 1);
        Print(l:"TXT_KILLED_ORACLE");
        GiveInventory("QuestItem23", 1);

        if (CheckInventory("QuestItem21")) { GiveInventory("QuestItem22", 1); }

        if (CheckInventory("QuestItem24")) { SendToCommunicator(85, 0, 0, 0); }
        else { SendToCommunicator(87, 0, 0, 0); }

        Delay(35);

        KilledOracle = 0;
        break;

      case 4:
        SamsaraGlobal[GLOBAL_SIGILBASE+4] = 1;
        SetActivatorToTarget(0);
        Print(l:"TXT_KILLED_MACIL");
        GiveInventory("Communicator", 1);
        GiveInventory("QuestItem24", 1);

        if (CheckInventory("QuestItem25")) { SendToCommunicator(106, 0, 0, 0); }
        else { SendToCommunicator(79, 0, 0, 0); }
        break;

      case 5:
        SamsaraGlobal[GLOBAL_SIGILBASE+5] = 1;
        Floor_LowerToLowest(666, 4);
        SetActivatorToTarget(0);

        Print(l:"TXT_KILLED_LOREMASTER");
        GiveInventory("Communicator", 1);
        GiveInventory("QuestItem26", 1);

        GiveInventory("StrifeStaminaReplacement", 1);
        GiveInventory("StrifeAccuracyReplacement", 1);

        if (CheckInventory("QuestItem23") && CheckInventory("QuestItem24") && CheckInventory("QuestItem21"))
        {
            SendToCommunicator(85, 0, 0, 0);
        }
        else
        {
            SendToCommunicator(83, 0, 0, 0);
        }
        break;

      case 6:
        if (arg1 < 1 || arg1 > SIGILCOUNT)
        {
            Log(s:"\caERROR\c-: Illegal value for sigil splinter given to script ", s:"SamsaraSpectres", s:" (", d:arg1, s:")");
            break;
        }

        SamsaraGlobal[GLOBAL_SIGILBASE + arg1] = !!arg2;
        break;

      case -1:
        SetActivatorToTarget(0);
        i = defaultTID(-1);

        AwakenSpectres = 1;
        SpectreTarget = i;

        Delay(35);
        AwakenSpectres = 0;
        SpectreTarget = 0;
        break;

      case -2:
        if (AwakenSpectres)
        {
            Thing_Hate(0, SpectreTarget, 0);
            SetActorState(0, "See");
        }
        break;
        
      case -3:
        result = KilledOracle;
        break;
    }

    SetResultValue(result);
}

script "SamsaraSigil" (int sequence) //317 -- SAMSARA_SIGIL
{
	int i, splinterCount = 0;
	switch(sequence)
	{
		case 1:
			Delay(21);
			GiveInventory("SigilInventorySequence1",1);
			for (i = 0; i < SIGILCOUNT; i++)
			{
				if (CheckInventory(SigilSplinters[i])) { splinterCount++; }
			}
			DamageThing(2 * splinterCount, 0);
			break;
		case 2:
			Delay(4);
			GiveInventory("SigilInventorySequence2",1);
			break;
		case 3:
			Delay(6);
			GiveInventory("SigilInventorySequence3",1);
			break;
		case 4:
			Delay(4);
			GiveInventory("SigilInventorySequence4",1);
			break;
	}
}

script "SamsaraStrifeMinesTransmitterUniqueGiver" ENTER
{
    if (CheckInventory("SamsaraMinesTransmitterUniqueGiven")) { terminate; }

    // keep a constant check on our stats to ensure they function as intended
    int orighp = GetActorProperty(0, APROP_Health);
    int origsta = GetActorProperty(0, APROP_Stamina);
    int origacc = GetActorProperty(0, APROP_Accuracy);

    while (true)
    {
        if (CheckInventory("QuestItem29"))
        {
            if (!CheckInventory("SamsaraMinesTransmitterUniqueGiven"))
            {
                SetActorProperty(0, APROP_Health, orighp);
                SetActorProperty(0, APROP_Stamina, origsta);
                SetActorProperty(0, APROP_Accuracy, origacc);
                GiveInventory("StrifeStaminaReplacement", 1);
                GiveInventory("StrifeAccuracyReplacement", 1);
                GiveInventory("SamsaraMinesTransmitterUniqueGiven", 1);
            }

            terminate;
        } else {
            orighp = GetActorProperty(0, APROP_Health);
            origsta = GetActorProperty(0, APROP_Stamina);
            origacc = GetActorProperty(0, APROP_Accuracy);
        }

        Delay(1);
    }
}
