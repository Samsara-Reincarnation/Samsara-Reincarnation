// Tokens

actor Goldeneye_AR33PickedUpX : MapCoordinate {}
actor Goldeneye_AR33PickedUpY : MapCoordinate {}
actor Goldeneye_AR33PickedUpZ : MapCoordinate {}
actor Goldeneye_AR33LastPickupTime : Counter { Inventory.InterHubAmount 0 }
actor Goldeneye_AR33LevelLimiter : Boolean {}
actor SamsaraGoldenEyeAR33SingleSkipFire : Boolean {}
actor SamsaraGoldenEyeAR33DualSkipFire : Boolean {}

// Weapon

actor Goldeneye_AR33 : SamsaraGoldenEyeWeapon
{
    Inventory.PickupMessage "Picked up an AR33 assault rifle."
    Inventory.Icon "GEWAR312"
    Weapon.SlotNumber 4
    Weapon.SlotPriority 0
    Weapon.SelectionOrder 13
    Weapon.AmmoType1 "Goldeneye_AR33Magazine"
    Weapon.AmmoUse1 1
    Weapon.AmmoType2 "Clip"
    Weapon.AmmoGive2 30
    Obituary "%o was drilled by %k's AR33."
    Tag "US AR33 Assault Rifle"
    States
    {
      Spawn:
        PIST A -1
        stop

      // Single
      Ready:
        TNT1 A 0 A_JumpIfInventory("BondWatchQueue",1,"WatchRaise")
        TNT1 A 0 A_JumpIfInventory("BondWatchToken",1,"WatchReady")
        TNT1 A 0 A_JumpIfInventory("BondAltToggle",2,"ZoomWeapon")
        TNT1 A 0 A_JumpIfInventory("BondAltToggle",1,"DualWield")
        TNT1 A 0 A_JumpIfInventory("BondZoomToken",1,"DecideZoomWeapon")
      ReadyStart:
        GE00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReadyReloadable")
      ReadyNonReloadable:
        GE00 A 1 A_WeaponReady
        goto ReadyAmmoCheck

      ReadyReloadable:
        GE00 A 1 A_WeaponReady(WRF_ALLOWRELOAD)
        goto ReadyAmmoCheck

      ReadyAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",2,1)
        goto Ready
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraSynthFireLeft",1,"Ready")
        goto ReloadCheck

      Deselect:
        GE00 A 0 A_JumpIfInventory("BondZoomToken",1,1)
        goto DeselectDualCheck
        GE00 A 0 A_TakeInventory("BondZoomToken")
        GE00 A 0 A_ZoomFactor(1)
      DeselectDualCheck:
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33DualToken",1,2)
        GE00 A 0 A_GunFlash("DualForceRemoval",GFF_NOEXTCHANGE)
        goto DeselectLoop
        GE00 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto DeselectLoop
        GE00 A 0 A_GunFlash("DeselectDual",GFF_NOEXTCHANGE)
      DeselectLoop:
        GE00 A 0 A_TakeInventory("BondFireDelay")
        GE00 A 0 A_TakeInventory("BondAlternateFire")
        GE00 A 0 A_TakeInventory("BondDualWieldToken")
        GE00 A 0 A_TakeInventory("BondAltToggle")
        GE00 A 0 A_TakeInventory("BondZoomToken")
        GE00 A 0 A_TakeInventory("BondZoomAmountModifyActive")
        GE00 A 0 A_TakeInventory("BondDualWieldSpamProtector")
        GE00 A 0 A_TakeInventory("BondDryFireSpamProtector1")
        GE00 A 0 A_TakeInventory("BondDryFireSpamProtector2")
        GE00 A 0 A_TakeInventory("BondAltActivationToken")
        GE00 A 1 A_Lower
        loop

      Select:
        GE00 A 0 A_GiveInventory("SamsaraGoldenEyeWeaponSwitchSoundPlayer")
      SelectZoomCheck:
        GE00 A 0 A_JumpIfInventory("BondZoomToken",1,1)
        goto SelectDualCheck
        GE00 A 0 A_TakeInventory("BondZoomToken")
        GE00 A 0 A_ZoomFactor(1,ZOOM_INSTANT) // map change
      SelectDualCheck:
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33DualToken",1,2)
        GE00 A 0 A_GunFlash("DualForceRemoval",GFF_NOEXTCHANGE)
        goto SelectLoop
        GE00 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto SelectLoop
        GE00 A 0 A_GunFlash("SelectDual",GFF_NOEXTCHANGE)
      SelectLoop:
        GE00 A 0 A_TakeInventory("Goldeneye_UnarmedToken")
        GE00 A 0 A_TakeInventory("Goldeneye_PP7Token")
        GE00 A 0 A_TakeInventory("Goldeneye_KnifeToken")
        GE00 A 0 A_TakeInventory("Goldeneye_KF7Token")
        GE00 A 0 A_TakeInventory("Goldeneye_AutoShotgunToken")
        GE00 A 0 A_GiveInventory("Goldeneye_AR33Token")
        GE00 A 0 A_TakeInventory("Goldeneye_RocketLauncherToken")
        GE00 A 0 A_TakeInventory("Goldeneye_RCP90Token")
        GE00 A 0 A_TakeInventory("Goldeneye_LaserToken")
        GE00 A 0 A_TakeInventory("Goldeneye_GoldenGunToken")
        GE00 A 0 A_TakeInventory("Goldeneye_SniperToken")
        GE00 A 0 A_TakeInventory("Goldeneye_D5KToken")
        GE00 A 1 A_Raise
        goto SelectZoomCheck

      Fire:
        GE00 A 0 A_TakeInventory("SamsaraGoldenEyeUnzoomedBurstSingleAttackAmount") // reset
      FireZoomCheck:
        GE00 A 0 A_JumpIfInventory("BondZoomToken",1,"DecideZoomWeaponFire")
      FireAltCheck:
        GE00 A 0 A_JumpIfInventory("SamsaraSynthFireRight",1,1)
        goto FireAltZoomCheck
        GE00 A 0 A_JumpIfInventory("BondZoomToken",1,"FireAltZoomCheck")
        GE00 A 0 A_JumpIfInventory("BondAltActivationToken",1,"FireAltZoomCheck")
        GE00 A 0 A_TakeInventory("BondAltToggle")
        GE00 A 0 A_GiveInventory("BondAltActivationToken")
        GE00 A 0 ACS_NamedExecuteAlways("BondAltFire")
        loop

      FireAltZoomCheck:
        GE00 A 0 A_JumpIfInventory("BondAltToggle",2,"ZoomWeaponFire")
      FireAltDualCheck:
        GE00 A 0 A_JumpIfInventory("BondAltToggle",1,"DualWieldFire")
      FireCheckDualOrder:
        GE00 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto FireAmmoCheck
        GE00 A 0 A_JumpIfInventory("BondFireDelay",0,"FireAmmoCheck")
        GE00 A 0 A_JumpIfInventory("BondAlternateFire",1,"Ready")
        goto FireAmmoCheck

      FireAmmoCheck:
        GE00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireAmmoCheckReloadable")
      FireAmmoCheckNonReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireInit")
        GE00 A 0 A_JumpIfInventory("Clip",1,"FireInit")
        goto FireDry

      FireAmmoCheckReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireInit")
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",1,"FireInit")
        goto FireDry

      FireDry:
        GE00 A 0 A_JumpIfInventory("BondDryFireSpamProtector1",1,"FireSetDualOrder")
        GE00 A 0 A_GiveInventory("SamsaraGoldenEyeWeaponDrySoundPlayer")
        GE00 A 0 ACS_NamedExecuteAlways("BondDryFireSpamBlocker_Primary")
        GE00 A 0 A_GiveInventory("BondDryFireSpamProtector1")
        goto FireSetDualOrder

      FireInit:
        GE00 A 0 A_JumpIfInventory("SamsaraGoldenEyeAR33SingleSkipFire",1,2)
        GE00 A 0 A_GiveInventory("SamsaraGoldenEyeAR33SingleSkipFire")
        goto FireStart
        GE00 A 0 A_TakeInventory("SamsaraGoldenEyeAR33SingleSkipFire")
        goto FireStart

      FireStart:
        GE00 A 0 A_GiveInventory("BondFiringToken")
        GE00 A 0 A_GiveInventory("SamsaraGoldenEyeUnzoomedBurstSingleAttackAmount")
        GE00 A 0 A_AlertMonsters
        GE01 A 1 Bright A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        GE01 B 0 A_GiveInventory("SamsaraGoldenEyeAR33SingleAttackHandler")
		GE00 A 0 A_JumpIfInventory("SamsaraGoldenEyeAR33SingleSkipFire",1,2)
        GE00 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        GE00 A 0 A_TakeInventory("BondFiringToken")
      FireBurstCheck:
        GE00 A 0 A_JumpIfInventory("BondZoomToken",1,"FireReFireCheck")
        GE00 A 0 A_JumpIfInventory("SamsaraGoldenEyeUnzoomedBurstSingleAttackAmount",3,"FireReFireCheck")
        GE00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireBurstCheckReloadable")
      FireBurstCheckNonReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireBurst")
        GE00 A 0 A_JumpIfInventory("Clip",1,"FireBurst")
        goto FireContinue

      FireBurstCheckReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireBurst")
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",1,"FireBurst")
        goto FireContinue

      FireBurst:
        GE00 A 0 A_GiveInventory("BondFireDelay")
        GE00 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto FireZoomCheck

      FireReFireCheck:
        GE00 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireReFireCheckReloadable")
      FireReFireCheckNonReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireReFire")
        GE00 A 0 A_JumpIfInventory("Clip",1,"FireReFire")
        goto FireContinue

      FireReFireCheckReloadable:
        GE00 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireReFire")
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",1,"FireReFire")
        goto FireContinue

      FireReFire:
        GE00 A 0 A_ReFire(1)
        goto FireContinue
        GE00 A 0 A_GiveInventory("BondFireDelay")
        GE00 A 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto Fire

      FireContinue:
        GE01 CDEDC 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        GE00 A 0
        goto FireSetDualOrder

      FireSetDualOrder:
        TNT1 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto FireFinish
        TNT1 A 0 A_GiveInventory("BondAlternateFire")
        goto FireFinish

      FireFinish:
        TNT1 A 0 A_TakeInventory("BondFiringToken")
        TNT1 A 0 A_TakeInventory("BondFireDelay")
        goto Ready

      Reload:
        TNT1 A 0 A_JumpIfInventory("SamsaraSynthFireLeft",1,"ReloadCheck")
        TNT1 A 0 A_JumpIfInventory("BondDualWieldToken",1,1)
        goto ReloadCheck
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",0,"ReloadCheck")
        TNT1 A 0 A_JumpIfInventory("BondDualReloadSpamProtector",1,"ReloadCheck")
        TNT1 A 0 A_GunFlash("ReloadCheckDual",GFF_NOEXTCHANGE)
        goto ReloadCheck

      ReloadCheck:
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStart")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"ReloadStart")
        goto Ready

      ReloadStart:
        GE02 A 0 A_GiveInventory("SamsaraGoldenEyeWeaponReloadSoundPlayer")
        GE02 ABCDEFGHI 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        GE02 I 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReloadAmmo")
      ReloadFinish:
        GE02 IHGFEDCBA 1 A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE)
        goto Ready

      ReloadAmmo:
        GE02 I 0 A_JumpIfInventory("Goldeneye_AR33Magazine",0,"ReloadFinish")
        GE02 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        GE02 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        GE02 I 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadFinish
        GE02 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        GE02 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        GE02 I 0 A_TakeInventory("Clip",1)
        GE02 I 0 A_GiveInventory("Goldeneye_AR33Magazine")
        loop

      // Dual Init
      AltFire:
        TNT1 A 0 A_JumpIfInventory("BondZoomToken",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("BondAltActivationToken",1,"Ready")
        TNT1 A 0 A_TakeInventory("BondAltToggle")
        TNT1 A 0 A_GiveInventory("BondAltActivationToken")
        TNT1 A 0 ACS_NamedExecuteAlways("BondAltFire")
        goto Ready

      DualUnwield:
        TNT1 A 0 A_TakeInventory("BondFireDelay")
        TNT1 A 0 A_TakeInventory("BondAlternateFire")
        TNT1 A 0 A_JumpIfInventory("BondDualWieldSpamProtector",1,5)
        TNT1 A 0 A_TakeInventory("BondDualWieldToken")
        TNT1 A 0 A_TakeInventory("BondDryFireSpamProtector1")
        TNT1 A 0 A_TakeInventory("BondDryFireSpamProtector2")
        TNT1 A 0 A_GunFlash("DualLower",GFF_NOEXTCHANGE)
        TNT1 A 0 A_ZoomFactor(1)
        goto ReadyStart

      DualUnwieldFire:
        GE00 A 0 A_TakeInventory("BondFireDelay")
        GE00 A 0 A_TakeInventory("BondAlternateFire")
        GE00 A 0 A_JumpIfInventory("BondDualWieldSpamProtector",1,5)
        GE00 A 0 A_TakeInventory("BondDualWieldToken")
        GE00 A 0 A_TakeInventory("BondDryFireSpamProtector1")
        GE00 A 0 A_TakeInventory("BondDryFireSpamProtector2")
        GE00 A 0 A_GunFlash("DualLower",GFF_NOEXTCHANGE)
        GE00 A 0 A_ZoomFactor(1)
        goto FireCheckDualOrder

      DualLower:
        GE12 A 0 A_TakeInventory("BondDualReloadSpamProtector")
        GE12 A 1 A_GiveInventory("BondDualWieldSpamProtector")
        GE12 BCDEFGHI 1
        TNT1 A 0 A_TakeInventory("BondDualWieldSpamProtector")
        stop

      DualWield:
        TNT1 A 0 A_TakeInventory("BondAltActivationToken")
        TNT1 A 0 A_TakeInventory("BondAltToggle")
        TNT1 A 0 A_TakeInventory("BondZoomToken")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33DualToken",1,2)
        TNT1 A 0 A_ZoomFactor(1)
        goto ReadyStart
        TNT1 A 0 A_JumpIfInventory("BondDualWieldToken",1,"DualUnwield")
        TNT1 A 0 A_JumpIfInventory("BondDualWieldSpamProtector",1,3)
        TNT1 A 0 A_GiveInventory("BondDualWieldToken")
        TNT1 A 0 A_GunFlash("DualRaise",GFF_NOEXTCHANGE)
        TNT1 A 0 A_ZoomFactor(1)
        goto ReadyStart

      DualWieldFire:
        GE00 A 0 A_TakeInventory("BondAltActivationToken")
        GE00 A 0 A_TakeInventory("BondAltToggle")
        GE00 A 0 A_TakeInventory("BondZoomToken")
        GE00 A 0 A_JumpIfInventory("Goldeneye_AR33DualToken",1,2)
        GE00 A 0 A_ZoomFactor(1)
        goto FireCheckDualOrder
        GE00 A 0 A_JumpIfInventory("BondDualWieldToken",1,"DualUnwieldFire")
        GE00 A 0 A_JumpIfInventory("BondDualWieldSpamProtector",1,3)
        GE00 A 0 A_GiveInventory("BondDualWieldToken")
        GE00 A 0 A_GunFlash("DualRaise",GFF_NOEXTCHANGE)
        GE00 A 0 A_ZoomFactor(1)
        goto FireCheckDualOrder

      DualRaise:
        GE12 I 0 A_TakeInventory("BondDualReloadSpamProtector")
        GE12 I 0 A_GiveInventory("BondDualWieldSpamProtector")
        GE12 I 1 A_GiveInventory("SamsaraGoldenEyeWeaponSwitchSoundPlayer")
        GE12 HGFEDCBA 1
        TNT1 A 0 A_TakeInventory("BondDualWieldSpamProtector")
        goto ReadyStartDual

      // Dual
      ReadyDual:
        TNT1 A 0 A_JumpIfInventory("BondFireDelay",0,2)
        TNT1 A 0 A_JumpIfInventory("BondAlternateFire",1,1)
        goto ReadyStartDual
        TNT1 A 0 A_JumpIfInventory("SamsaraSynthFireLeft",1,"FireDual")
      ReadyStartDual:
        GE10 A 1
        goto ReadyAmmoCheckDual

      ReadyAmmoCheckDual:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",2,1)
        goto ReadyDual
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"ReadyDual")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",1,"ReadyDual")
        TNT1 A 0 A_JumpIfInventory("SamsaraSynthFireLeft",1,"ReadyDual")
        goto ReloadCheckDual

      DeselectDual:
        GE10 A 0 A_TakeInventory("BondDualReloadSpamProtector")
        GE10 A 1 A_TakeInventory("BondDualWieldSpamProtector")
        GE10 AAAAAAAAAAAAAAA 1
        stop

      SelectDual:
        GE10 A 0 A_TakeInventory("BondDualReloadSpamProtector")
        GE10 A 1 A_TakeInventory("BondDualWieldSpamProtector")
        goto ReadyStartDual

      FireDual:
        GE10 A 0 A_TakeInventory("SamsaraGoldenEyeUnzoomedBurstDualAttackAmount") // reset
      FireAmmoCheckDual:
        GE10 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireAmmoCheckDualReloadable")
      FireAmmoCheckDualNonReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireInitDual")
        GE10 A 0 A_JumpIfInventory("Clip",1,"FireInitDual")
        goto FireDryDual

      FireAmmoCheckDualReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireInitDual")
        GE10 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",1,"FireInitDual")
        goto FireDryDual

      FireDryDual:
        GE10 A 0 A_JumpIfInventory("BondDryFireSpamProtector2",1,"FireSetDualOrderDual")
        GE10 A 0 A_GiveInventory("SamsaraGoldenEyeWeaponDrySoundPlayer")
        GE10 A 0 ACS_NamedExecuteAlways("BondDryFireSpamBlocker_Secondary")
        GE10 A 0 A_GiveInventory("BondDryFireSpamProtector2")
        goto FireSetDualOrderDual

      FireInitDual:
        GE10 A 0 A_JumpIfInventory("SamsaraGoldenEyeAR33DualSkipFire",1,2)
        GE10 A 0 A_GiveInventory("SamsaraGoldenEyeAR33DualSkipFire")
        goto FireStartDual
        GE10 A 0 A_TakeInventory("SamsaraGoldenEyeAR33DualSkipFire")
        goto FireStartDual

      FireStartDual:
        GE10 A 0 A_GiveInventory("BondFiringToken")
        GE10 A 0 A_GiveInventory("SamsaraGoldenEyeUnzoomedBurstDualAttackAmount")
        GE11 A 1 Bright A_GiveInventory("SamsaraGoldenEyeAR33DualAttackHandler")
		GE11 B 0 A_AlertMonsters
		GE10 A 0 A_JumpIfInventory("SamsaraGoldenEyeAR33DualSkipFire",1,2)
        GE10 A 1 
		GE10 A 0 A_TakeInventory("BondFiringToken")
      FireDualBurstCheck:
        GE10 A 0 A_JumpIfInventory("BondZoomToken",1,"FireDualReFireCheck")
        GE10 A 0 A_JumpIfInventory("SamsaraGoldenEyeUnzoomedBurstDualAttackAmount",3,"FireDualReFireCheck")
        GE10 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireDualBurstCheckReloadable")
      FireDualBurstCheckNonReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireDualBurst")
        GE10 A 0 A_JumpIfInventory("Clip",1,"FireDualBurst")
        goto FireDualContinue

      FireDualBurstCheckReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireDualBurst")
        GE10 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",1,"FireDualBurst")
        goto FireDualContinue

      FireDualBurst:
        GE10 A 1 A_GiveInventory("BondFireDelay")
        goto FireAmmoCheckDual

      FireDualReFireCheck:
        GE10 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"FireDualReFireCheckReloadable")
      FireDualReFireCheckNonReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireDualReFire")
        GE10 A 0 A_JumpIfInventory("Clip",1,"FireDualReFire")
        goto FireDualContinue

      FireDualReFireCheckReloadable:
        GE10 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireDualReFire")
        GE10 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",1,"FireDualReFire")
        goto FireDualContinue

      FireDualReFire:
        GE10 A 0 A_JumpIfInventory("SamsaraSynthFireLeft",1,1)
        goto FireDualContinue
        GE10 A 1 A_GiveInventory("BondFireDelay")
        goto FireDual

      FireDualContinue:
        GE11 CDEDC 1
        GE10 A 0
        goto FireSetDualOrderDual

      FireSetDualOrderDual:
        TNT1 A 0 A_TakeInventory("BondAlternateFire")
        goto FireFinishDual

      FireFinishDual:
        TNT1 A 0 A_TakeInventory("BondFiringToken")
        TNT1 A 0 A_TakeInventory("BondFireDelay")
        goto ReadyDual

      ReloadCheckDual:
        TNT1 A 0 A_TakeInventory("BondDualWieldSpamProtector")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",0,"ReadyDual")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"ReloadStartDual")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"ReloadStartDual")
        goto ReadyDual

      ReloadStartDual:
        GE12 A 0 A_GiveInventory("BondDualReloadSpamProtector")
        GE12 A 1 A_GiveInventory("SamsaraGoldenEyeWeaponReloadSoundPlayer")
        GE12 BCDEFGHI 1
        GE12 I 0 A_JumpIfInventory("SamsaraReloadMode",2,"ReloadAmmoDual")
      ReloadFinishDual:
        GE12 IHGFEDCBA 1
        TNT1 A 0 A_TakeInventory("BondDualReloadSpamProtector")
        goto ReadyDual

      ReloadAmmoDual:
        GE12 I 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",0,"ReloadFinishDual")
        GE12 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        GE12 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        GE12 I 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadFinishDual
        GE12 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        GE12 I 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        GE12 I 0 A_TakeInventory("Clip",1)
        GE12 I 0 A_GiveInventory("Goldeneye_AR33DualMagazine")
        loop

      // Zoom
      ZoomWeapon:
        TNT1 A 0 A_TakeInventory("BondAltActivationToken")
        TNT1 A 0 A_TakeInventory("BondAltToggle")
        TNT1 A 0 A_GiveInventory("BondZoomToken")
        TNT1 A 0 A_ZoomFactor(1.67)
        goto ReadyStart

      DecideZoomWeapon:
        TNT1 A 0 A_JumpIfInventory("SamsaraSynthFireRight",1,"ReadyStart")
        goto UnzoomWeapon

      UnzoomWeapon:
        TNT1 A 0 A_TakeInventory("BondZoomToken")
        TNT1 A 0 A_ZoomFactor(1)
        goto ReadyStart

      ZoomWeaponFire:
        GE00 A 0 A_TakeInventory("BondAltActivationToken")
        GE00 A 0 A_TakeInventory("BondAltToggle")
        GE00 A 0 A_GiveInventory("BondZoomToken")
        GE00 A 0 A_ZoomFactor(1.67)
        goto FireAltDualCheck

      DecideZoomWeaponFire:
        GE00 A 0 A_JumpIfInventory("SamsaraSynthFireRight",1,"FireAltCheck")
        goto UnzoomWeaponFire

      UnzoomWeaponFire:
        GE00 A 0 A_TakeInventory("BondZoomToken")
        GE00 A 0 A_ZoomFactor(1)
        goto FireAltCheck
    }
}

// Attack handlers

actor SamsaraGoldenEyeAR33SingleAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Clip",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33Magazine",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Goldeneye_AR33Magazine",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackSource")
      // Original sounds
      PickupAttackN64:
        TNT1 A 0 A_PlaySound("Goldeneye/AR33Shot",CHAN_WEAPON)
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Rifle",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackN64Coop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackN64Coop")
      PickupAttackN64DM:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33Tracer",frandom(-3,3),false,6,0,0,frandom(-3,3))
        stop

      PickupAttackN64Coop:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerCoop",frandom(-3,3),false,6,0,0,frandom(-3,3))
        stop

      // Source sounds
      PickupAttackSource:
        TNT1 A 0 A_PlaySound("GoldeneyeSource/AR33Shot",CHAN_WEAPON)
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_RifleSoundSource",cos(pitch)*22,6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackSourceCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackSourceCoop")
      PickupAttackSourceDM:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerSoundSource",frandom(-3,3),false,6,0,0,frandom(-3,3))
        stop

      PickupAttackSourceCoop:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerCoopSoundSource",frandom(-3,3),false,6,0,0,frandom(-3,3))
        stop
    }
}

actor SamsaraGoldenEyeAR33DualAttackHandler : Trigger
{
    States
    {
      // Ammo checking/taking stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",2,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Clip",1)
        goto PickupAttack

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("Goldeneye_AR33DualMagazine",1,1)
        stop
        TNT1 A 0 A_TakeInventory("Goldeneye_AR33DualMagazine",1)
        goto PickupAttack

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_JumpIfInventory("SamsaraAlternateSoundToken",1,"PickupAttackSource")
      // Original sounds
      PickupAttackN64:
        TNT1 A 0 A_PlaySound("Goldeneye/AR33Shot",CHAN_WEAPON)
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_Rifle",cos(pitch)*22,-6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackN64Coop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackN64Coop")
      PickupAttackN64DM:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33Tracer",frandom(-3,3),false,-6,0,0,frandom(-3,3))
        stop

      PickupAttackN64Coop:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerCoop",frandom(-3,3),false,-6,0,0,frandom(-3,3))
        stop

      // Source sounds
      PickupAttackSource:
        TNT1 A 0 A_PlaySound("GoldeneyeSource/AR33Shot",CHAN_WEAPON)
        TNT1 A 0 A_SpawnItemEx("Goldeneye_Cartridge_RifleSoundSource",cos(pitch)*22,-6,42-(sin(pitch)*22),(2*cos(pitch))+(2*sin(pitch)),frandom(2,3),abs(4*cos(pitch)),0,SXF_TRANSFERPITCH)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackSourceCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackSourceCoop")
      PickupAttackSourceDM:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerSoundSource",frandom(-3,3),false,-6,0,0,frandom(-3,3))
        stop

      PickupAttackSourceCoop:
        TNT1 A 0 A_FireCustomMissile("Goldeneye_AR33TracerCoopSoundSource",frandom(-3,3),false,-6,0,0,frandom(-3,3))
        stop
    }
}

actor Goldeneye_AR33Magazine : Ammo
{
    Inventory.MaxAmount 30
    Tag "AR33 Magazine (Right)"
    +IGNORESKILL
}

actor Goldeneye_AR33DualMagazine : Ammo
{
    Inventory.MaxAmount 30
    Tag "AR33 Magazine (Left)"
    +IGNORESKILL
}

actor Goldeneye_AR33Tracer : Goldeneye_BulletTracerThruGhost
{
    States
    {
      XDeath:
        TNT1 A 0 A_SetUserVar("user_damage",14)
        goto Super::XDeath
	  Crash:
        TNT1 A 0 A_SetUserVar("user_damage",14)
        goto Super::Crash
    }
}

actor Goldeneye_AR33TracerCoop : Goldeneye_AR33Tracer
{
    Species "Player"
    +THRUSPECIES
}

actor Goldeneye_AR33TracerSoundSource : Goldeneye_BulletTracerThruGhostSoundSource
{
    States
    {
      XDeath:
        TNT1 A 0 A_SetUserVar("user_damage",14)
        goto Super::XDeath
	  Crash:
        TNT1 A 0 A_SetUserVar("user_damage",14)
        goto Super::Crash
    }
}

actor Goldeneye_AR33TracerCoopSoundSource : Goldeneye_AR33TracerSoundSource
{
    Species "Player"
    +THRUSPECIES
}
