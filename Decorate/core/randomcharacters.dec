Actor DetermineValidCell
{
	+VULNERABLE
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("isCellCheckerToken",1)
			TNT1 A 0 A_RadiusGive("DetermineValidCellBroadcast",1024,RGF_PLAYERS|RGF_MONSTERS|RGF_NOSIGHT|RGF_CUBE)
			TNT1 A 4
			Stop
	}
}

Actor DetermineValidCellBroadcast : Trigger
{
	States
	{
		Pickup:	
			TNT1 A 0 A_RadiusGive("IsValidCellBroadcast",1024,RGF_OBJECTS|RGF_NOSIGHT|RGF_CUBE)
			Stop
	}
}

Actor IsValidCellBroadcast : Trigger
{
	States
	{
		Pickup:
			TNT1 A 0 A_JumpIfInventory("isCellCheckerToken",1,1)
			fail
			TNT1 A 0 ACS_NamedExecuteWithResult("CellDoneScanning")
			TNT1 A 0 Thing_Remove(0)
			Stop
	}
}

Actor DetermineValidSpawn
{
	Height 52
	Radius 32
	+VULNERABLE
	+SOLID
	States
	{
		Spawn:
			TNT1 A 0 NoDelay A_GiveInventory("isSpawnCheckerToken",1)
			TNT1 A 0 A_RadiusGive("DetermineValidSpawnBroadcast",1024,RGF_PLAYERS|RGF_MONSTERS|RGF_CUBE)
			TNT1 A 0 A_UnsetSolid
			TNT1 A 4
			Stop
	}
}

Actor DetermineValidSpawnBroadcast : Trigger
{
	States
	{
		Pickup:	
			TNT1 A 0 A_RadiusGive("IsValidSpawnBroadcast",1024,RGF_OBJECTS|RGF_CUBE)
			Stop
	}
}

Actor IsValidSpawnBroadcast : Trigger
{
	States
	{
		Pickup:
			TNT1 A 0 A_JumpIfInventory("isSpawnCheckerToken",1,1)
			fail
			TNT1 A 0 A_JumpIfInventory("ValidSpawnToken",1,"Failure")
			TNT1 A 0 A_GiveInventory("ValidSpawnToken",1)
			TNT1 A 0 ACS_NamedExecuteWithResult("Samsara2689")
			Stop
		Failure:
			TNT1 A 0
			fail
	}
}

Actor isCellCheckerToken : Inventory { Inventory.MaxAmount 1 }
Actor isSpawnCheckerToken : Inventory { Inventory.MaxAmount 1 }
Actor ValidSpawnToken : Inventory { Inventory.MaxAmount 1 }

Actor DetermineValidSpawnTestObject
{
	Height 52
	Radius 32
	States
	{
		Spawn:
			TNT1 A 5
			Stop
	}
}