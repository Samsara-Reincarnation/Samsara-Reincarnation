actor UsingAssaultRifle: Boolean {}

actor AssaultFiredP: Counter {}
actor AssaultFiredS: Counter {}
actor AssaultClicked: Counter {}
actor AssaultClicked2: Counter {}

actor MarathonCasingSound: Counter { Inventory.MaxAmount 8 }

actor "MA-75B Assault Rifle" : Weapon// replaces Chaingun
{
    Weapon.BobRangeX 0
    Weapon.BobStyle Smooth
    Weapon.SelectionOrder 100
    Weapon.SlotNumber 4
    Decal BulletChip
    Inventory.PickupMessage "You picked up a MA-75B Assault Rifle!"
	Inventory.RestrictedTo "MarathonPlayer"
    Weapon.AmmoType "RifleBullet"
    Weapon.AmmoGive 0
    Weapon.AmmoUse 1
    Weapon.AmmoType2 "Clip"
    Weapon.AmmoGive2 26
    Weapon.AmmoUse2 1
    +AMMO_OPTIONAL
    +ALT_AMMO_OPTIONAL
    +NOAUTOAIM
    +NOALERT
    +INVENTORY.UNDROPPABLE
    States
    {
      Spawn:
        RIFL A -1
        STOP
        
      Deselect:
        ASLT A 0 A_TakeInventory("AssaultFiredP")
        ASLT A 0 A_TakeInventory("AssaultFiredS")
        ASLT A 0 A_TakeInventory("AssaultClicked")
        ASLT A 0 A_TakeInventory("AssaultClicked2")
        ASLT A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleActive")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
        goto Deselect2

      Deselect2:
        TNT1 A 0 A_Lower
        ASLT A 1 A_Lower
        Loop
        
      Select:
        TNT1 A 0 A_TakeInventory("UsingFists",1)
        TNT1 A 0 A_TakeInventory("UsingPistols",1)
        TNT1 A 0 A_TakeInventory("UsingDualPistols",1)
        TNT1 A 0 A_TakeInventory("UsingSMG",1)
        TNT1 A 0 A_TakeInventory("UsingPacifier",1)
        TNT1 A 0 A_TakeInventory("UsingShotguns",1)
        TNT1 A 0 A_TakeInventory("UsingDualShotguns",1)
        TNT1 A 0 A_TakeInventory("UsingFusionPistol",1)
        //TNT1 A 0 A_TakeInventory("UsingAssaultRifle",1)
        TNT1 A 0 A_TakeInventory("UsingSpanker",1)
        TNT1 A 0 A_TakeInventory("UsingToasty",1)
        TNT1 A 0 A_TakeInventory("UsingWMC",1)
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon",1)
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon2",1)
        //TNT1 A 0 A_TakeInventory("UsingMarathonInstagib",1)

        TNT1 A 0 A_GiveInventory("UsingAssaultRifle",1)
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"Select2")

      SelectAltReload:
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"Select2")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto Select2
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        TNT1 A 0 A_GiveInventory("GrenadeInClip",1)
        loop

      Select2:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleActive")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
        TNT1 A 0 A_Raise
        ASLT A 1 A_Raise
        loop

      Ready:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleActive")
      ReadyShow:
        ASLT A 0 A_JumpIfInventory("AssaultFiredP", 3, "ReadyFired")
        ASLT A 0 A_JumpIfInventory("AssaultFiredP", 2, "ReadyFired2")
        ASLT A 0 A_JumpIfInventory("AssaultFiredP", 1, "ReadyBright")
        TNT1 A 0 A_Light0
        ASLT A 0 A_JumpIfInventory("AssaultFiredS", 1, "ReadyAltActive")
        ASLT A 1 A_WeaponReady
      ReadyShow2:
        TNT1 A 0 A_JumpIfInventory("MarathonCasingSound",0,"CasingSound")
      ReadyShow3:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"Ready")
      Reload:
        TNT1 A 0 A_JumpIfInventory("Clip",1,"ReloadAnim")
        goto Ready

      ReloadAnim:
        ASLT D 10 A_Light0
        goto ReloadAmmo

      ReloadAnimFinish:
        ASLT E 11 A_PlaySound("marathon/rifle/reload")
        ASLT F 10
        goto Ready
        
      ReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("RifleBullet",0,"ReloadAnimFinish")
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadAnimFinish
        TNT1 A 0 A_TakeInventory("Clip",1)
        TNT1 A 0 A_GiveInventory("RifleBullet")
        loop

      ReadyFired:
        TNT1 A 0 A_Light0
        ASLT C 1 bright A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_NOPRIMARY)
        goto Ready

      ReadyFired2:
        TNT1 A 0 A_Light1
        ASLT B 1 bright A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_NOPRIMARY)
        goto Ready

      ReadyBright:
        TNT1 A 0 A_Light0
        ASLT A 1 bright A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_NOPRIMARY)
        goto Ready

      ReadyAltActive:
        ASLT A 1 A_WeaponReady(WRF_NOSWITCH)
        goto ReadyShow2

      CasingSound:
        TNT1 A 0 A_PlaySound("marathon/casings")
        goto ReadyShow3

      Fire:
        TNT1 A 0 A_JumpIfInventory("AssaultFiredP", 1, "CheckAlt")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,1)
        goto CheckReload
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"DryCheck")

        TNT1 A 0 A_AlertMonsters

        TNT1 A 0 A_GiveInventory("AssaultFiredP", 3)
        TNT1 A 0 A_GiveInventory("MarathonCasingSound", 1)

        TNT1 A 0 A_PlaySound("marathon/rifle/fire", CHAN_WEAPON)
        TNT1 A 0 A_FireCustomMissile("32mmCasingSpawner", 0, 0, 0, -13)

        TNT1 A 0 A_JumpIfInventory("SPModeOn", 1, "CoopFire")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopFire")
        TNT1 A 0 A_FireCustomMissile("MarathonARBullet", random(-4, 4), 1, 0, 0, 0, random(-4, 4))
        goto Fire2

      CoopFire:
        TNT1 A 0 A_FireCustomMissile("MarathonARBulletCoop", random(-5, 5), 1, 0, 0, 0, random(-5, 5))//A_FireBullets(10, 10, -1, 9+random(0, 6), "MarathonPuff")
        goto Fire2

      Fire2:
        TNT1 A 0 A_GunFlash
        goto CheckAlt

      DryCheck:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("AssaultClicked", 1, "CheckAlt")
        TNT1 A 0 A_GiveInventory("AssaultClicked", 3)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        goto CheckAlt

      CheckAlt:
        TNT1 A 0 A_JumpIfInventory("SynthFireRight", 1, "AltFire")
        goto ReadyShow

      CheckReload:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"ReloadAnim")
        //TNT1 A 0 A_CheckReload  // almost guaranteed to switch
        goto DryCheck

      AltFire:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"ReadyShow")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"ReadyShow")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS", 1, "ReadyShow")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip", 1, 1)
        goto CheckAltReload
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"DryCheck2")

        TNT1 A 0 A_GiveInventory("AssaultFiredS", 26)
        TNT1 A 0 A_TakeInventory("GrenadeInClip", 1, TIF_NOTAKEINFINITE)
        TNT1 A 0 A_PlaySound("marathon/rifle/grenade", 6)

        TNT1 A 0 A_JumpIfInventory("SPModeOn", 1, "CoopAltFire")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn", 1, "CoopAltFire")
        TNT1 A 0 A_FireCustomMissile("MarathonGrenade", 0, 0, 0, 6, 0, 4)
        goto Fire2

      CoopAltFire:
        TNT1 A 0 A_FireCustomMissile("MarathonGrenadeCoop", 0, 0, 0, 6, 0, 4)
        goto Fire2

      CheckAltReload:
        TNT1 A 0 A_JumpIfInventory("RocketAmmo", 1, "ReadyShow")
        //TNT1 A 0 A_CheckReload
        goto DryCheck2

      DryCheck2:
        TNT1 A 0 A_JumpIfInventory("AssaultClicked2", 1, "ReadyShow")
        TNT1 A 0 A_GiveInventory("AssaultClicked2", 26)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        goto ReadyShow
    }
}

actor MarathonARBullet : FastProjectile
{
    Damage (15)
    Radius 8
    Height 8
    Speed 100
    Projectile
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_1"
    +BLOODSPLATTER
    +NOTIMEFREEZE
    +NOEXTREMEDEATH
    +THRUGHOST
    Alpha 1.0
    Decal Bulletchip
    States
    {
      Spawn:
        TNT1 A 1
        loop
        
      Crash:
        TNT1 A 0 A_PlaySound("puff/ding")
      Death:
        TNT1 A 1 A_SpawnItem("MarathonPuff")
        stop
        
      XDeath:
        TNT1 A 1 A_PlaySound("puff/hit")
        stop
    }
}

actor MarathonARBulletCoop : MarathonARBullet
{
    Damage (random(9, 15))
    Radius 1
    Height 1
    Speed 80
    +THRUSPECIES
    Species "Player"
}

actor 32mmCasingSpawner
{
    Radius 1
    Height 1
    Speed 25
    PROJECTILE
    +CLIENTSIDEONLY
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_Die
        Goto Death
        
      Death:
        TNT1 A 0 A_CustomMissile("32mmCasing", 1, 5, random(-80, -110), 2, random(30, 40))
        Stop
    }
}

actor 32mmCasing
{ 
    Scale 0.25
    Radius 3
    Height 3
    Speed 7
    Mass 5
    BounceCount 1
    +CLIENTSIDEONLY
    +THRUACTORS
    +DROPOFF
    +MISSILE
    +NOTELEPORT
    +FLOORCLIP
    +FORCEXYBILLBOARD
    +DOOMBOUNCE
    States
    {
      Spawn:
        RBLT ABCDEF 1
        Loop
        
      Death:
        TNT1 A 1
        //RBLT EEEEEEEEEEEEEEEEEEEE 1 A_FadeOut(0.05)
        Stop
    }
}

actor RifleBullet : Ammo
{
    +IGNORESKILL
    Inventory.MaxAmount 52
}

actor GrenadeInClip : Ammo // In this case it actually IS a clip!
{
    +IGNORESKILL
    Inventory.MaxAmount 7
}

actor MarathonGrenade
{
    Decal Scorch
    Radius 6
    Height 8
    Mass 1
    Speed 17
    Damage 4
    DamageType "Explosive"
    Scale 0.55
    //Gravity 0.11
    DeathSound "marathon/rifle/nadexpl"
    Projectile
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_2"
    -NOGRAVITY
    +LOWGRAVITY
    +FORCERADIUSDMG
    +BLOODLESSIMPACT
    +EXTREMEDEATH
    //+GRENADETRAIL
    States
    {
      Spawn:
        NADE AAAAAAAAAAAAAAA 1 Bright A_SpawnItem("MarathonGrenadeSmoke")
        
      Spawn2:
        NADE A 1 Bright
        LOOP
        
      Death:
        TNT1 A 0 A_NoGravity
        XPLD A 4 Bright A_Explode(70+random(0, 20), 128)
        XPLD B 4 Bright 
        XPLD C 4 Bright
        XPLD D 4 Bright
        XPLD E 4 Bright
        XPLD F 4 Bright
        Stop
    }
}

actor MarathonGrenadeCoop : MarathonGrenade
{
    Speed 15
    +THRUSPECIES
    Species "Player"
    States
    {
      Death:
        TNT1 A 0 A_NoGravity
        XPLD A 4 Bright A_Explode(80+random(0, 20), 128)
        XPLD B 4 Bright 
        XPLD C 4 Bright
        XPLD D 4 Bright
        XPLD E 4 Bright
        XPLD F 4 Bright
        Stop
    }
}

actor MarathonGrenadeSmoke
{
    Radius 1
    Height 1
    Speed 0
    +NOGRAVITY
    -SOLID
    +NOCLIP
    +RANDOMIZE
    +CLIENTSIDEONLY
    Scale 0.15
    States
    {
      Spawn:
        TNT1 A 2
        FLME CD 1 BRIGHT
        MSMK ABCD 1
        stop
    }
}

// Grenade reload hack

actor SamsaraMarathonRifleActive : Boolean {}
actor SamsaraMarathonRifleAltReloadWaitTime : Counter {}
actor SamsaraMarathonRifleAltReloadFireLockTime : Counter {}

actor SamsaraMarathonRifleAltReload : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupReload")
      PickupStop:
        TNT1 A 0
        stop

      PickupReload:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReloadWaitTimeDecrement")
      PickupReloadWaitTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadWaitTime",14) // tics before ammo giving
        stop

      PickupReloadWaitTimeDecrement:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"PickupReloadWaitTimeDecrement2x")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",1)
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
        goto PickupReloadAmmo

      PickupReloadWaitTimeDecrement2x:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",2)
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
      PickupReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto PickupReloadFinish
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        TNT1 A 0 A_GiveInventory("GrenadeInClip",1)
        loop

      PickupReloadFinish:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFireLockTimeDecrement")
      PickupReloadFireLockTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadFireLockTime",15) // tics before being able to alt fire
        stop

      PickupReloadFireLockTimeDecrement:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"PickupReloadFireLockTimeDecrement2x")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",1)
        stop

      PickupReloadFireLockTimeDecrement2x:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",2)
        stop
    }
}
