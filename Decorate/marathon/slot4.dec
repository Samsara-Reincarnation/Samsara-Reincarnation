actor UsingAssaultRifle: Boolean {}

actor AssaultFiredS: Counter {}
actor AssaultClicked: Counter {}
actor AssaultClicked2: Counter {}

actor MarathonCasingSound: Counter { Inventory.MaxAmount 8 }

actor "MA-75B Assault Rifle" : Weapon// replaces Chaingun
{
    Weapon.BobRangeX 0
    Weapon.BobStyle Smooth
    Weapon.SelectionOrder 100
    Weapon.SlotNumber 4
    Decal BulletChip
    Inventory.PickupMessage "You picked up a MA-75B Assault Rifle!"
	Inventory.RestrictedTo "MarathonPlayer"
    Weapon.AmmoType "RifleBullet"
    Weapon.AmmoGive 0
    Weapon.AmmoUse 1
    Weapon.AmmoType2 "Clip"
    Weapon.AmmoGive2 26
    Weapon.AmmoUse2 0
    +AMMO_OPTIONAL
    +ALT_AMMO_OPTIONAL
    +NOAUTOAIM
    +NOALERT
    +INVENTORY.UNDROPPABLE
    Tag "MA-75B Assault Rifle"
    States
    {
      Spawn:
        RIFL A -1
        stop

      Ready:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleActive")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"ReadyAltActive")
        ASLT A 1 A_WeaponReady
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltFire")
      ReadyCasingSound:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonCasingSoundHandler")
      ReadyAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyAmmoCheckReloadable")
        goto Ready

      ReadyAltActive:
        ASLT A 1 A_WeaponReady(WRF_NOSWITCH)
        goto ReadyCasingSound

      ReadyAmmoCheckReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto Ready

      Deselect:
        TNT1 A 0 A_TakeInventory("AssaultFiredS")
        TNT1 A 0 A_TakeInventory("AssaultClicked")
        TNT1 A 0 A_TakeInventory("AssaultClicked2")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleActive")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
      Deselect2:
        TNT1 A 0 A_Lower
        ASLT A 1 A_Lower
        loop

      Select:
        TNT1 A 0 A_TakeInventory("UsingFists")
        TNT1 A 0 A_TakeInventory("UsingPistols")
        TNT1 A 0 A_TakeInventory("UsingDualPistols")
        TNT1 A 0 A_TakeInventory("UsingSMG")
        TNT1 A 0 A_TakeInventory("UsingPacifier")
        TNT1 A 0 A_TakeInventory("UsingShotguns")
        TNT1 A 0 A_TakeInventory("UsingDualShotguns")
        TNT1 A 0 A_TakeInventory("UsingFusionPistol")
        //TNT1 A 0 A_TakeInventory("UsingAssaultRifle")
        TNT1 A 0 A_TakeInventory("UsingSpanker")
        TNT1 A 0 A_TakeInventory("UsingToasty")
        TNT1 A 0 A_TakeInventory("UsingWMC")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon2")
        //TNT1 A 0 A_TakeInventory("UsingMarathonInstagib")

        TNT1 A 0 A_GiveInventory("UsingAssaultRifle")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"SelectAltReloadAmmoCheck")
      Select2:
        TNT1 A 0 A_TakeInventory("AssaultFiredS")
        TNT1 A 0 A_TakeInventory("AssaultClicked")
        TNT1 A 0 A_TakeInventory("AssaultClicked2")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleActive")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime")
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime")
        TNT1 A 0 A_Raise
        ASLT A 1 A_Raise
        loop

      SelectAltReloadAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Select2")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"Select2")
      SelectAltReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"Select2")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto Select2
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        TNT1 A 0 A_GiveInventory("GrenadeInClip")
        loop

      Fire:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,"FireModernReloadable")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireClassicReloadable")
      FireNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireActual")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"FireActual")
      FireDry:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("AssaultClicked",1,"Ready")
        TNT1 A 0 A_GiveInventory("AssaultClicked",3)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        goto Ready

      FireClassicReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireActual")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"FireActual")
      FireClassicReloadableDryCheck:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto FireDry

      FireModernReloadable:
        TNT1 A 0 A_JumpIfInventory("SynthFireReload",1,1)
        goto FireClassicReloadable
        TNT1 A 0 A_JumpIfInventory("RifleBullet",0,"FireClassicReloadable")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto FireClassicReloadable

      FireActual:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"FireDry")
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_GiveInventory("MarathonCasingSound")
        TNT1 A 0 A_FireCustomMissile("32mmCasingSpawner",0,false,0,-13)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRiflePrimaryAttackHandler")
      FireFinish:
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,2)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltFire")
        ASLT C 1 Bright
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,2)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltFire")
        ASLT B 1 Bright A_Light1
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,2)
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltFire")
        ASLT A 1 Bright A_Light0
        TNT1 A 0 A_ReFire
        goto Ready

      // AltFire handled in SamsaraMarathonRifleAltFire trigger

      Reload:
        ASLT D 10 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
      ReloadFinish:
        ASLT E 11 A_PlaySound("marathon/rifle/reload")
        ASLT F 10
        goto Ready

      ReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("RifleBullet",0,"ReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadFinish
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("Clip",1)
        TNT1 A 0 A_GiveInventory("RifleBullet")
        loop
    }
}

actor SamsaraMarathonRiflePrimaryAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("RifleBullet",1,"PickupTakeAmmoReloadable")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/rifle/fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("MarathonARBullet",random(-4,4),false,0,0,0,random(-4,4))
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("MarathonARBulletCoop",random(-5,5),false,0,0,0,random(-5,5))
        stop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Clip",1,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("RifleBullet",1)
        goto PickupAttack
    }
}

actor SamsaraMarathonRifleSecondaryAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupTakeAmmoReloadable")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/rifle/grenade",CHAN_6)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("MarathonGrenade",0,false,0,6,0,4)
      PickupFinish:
        TNT1 A 0 A_Recoil(3)
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("MarathonGrenadeCoop",0,false,0,6,0,4)
        goto PickupFinish

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("RocketAmmo",1,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("GrenadeInClip",1)
        goto PickupAttack
    }
}

actor MarathonARBullet : FastProjectile
{
    Damage (15)
    Radius 8
    Height 8
    Speed 100
    Projectile
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_1"
    +BLOODSPLATTER
    +NOTIMEFREEZE
    +NOEXTREMEDEATH
    +THRUGHOST
    Alpha 1.0
    Decal Bulletchip
    States
    {
      Spawn:
        TNT1 A 1
        loop
        
      Crash:
        TNT1 A 0 A_PlaySound("puff/ding")
      Death:
        TNT1 A 1 A_SpawnItem("MarathonPuff")
        stop
        
      XDeath:
        TNT1 A 1 A_PlaySound("puff/hit")
        stop
    }
}

actor MarathonARBulletCoop : MarathonARBullet
{
    Damage (random(9, 15))
    Radius 1
    Height 1
    Speed 80
    +THRUSPECIES
    Species "Player"
}

actor 32mmCasingSpawner
{
    Radius 1
    Height 1
    Speed 25
    PROJECTILE
    +CLIENTSIDEONLY
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_Die
        Goto Death
        
      Death:
        TNT1 A 0 A_CustomMissile("32mmCasing", 1, 5, random(-80, -110), 2, random(30, 40))
        Stop
    }
}

actor 32mmCasing
{ 
    Scale 0.25
    Radius 3
    Height 3
    Speed 7
    Mass 5
    BounceCount 1
    +CLIENTSIDEONLY
    +THRUACTORS
    +DROPOFF
    +MISSILE
    +NOTELEPORT
    +FLOORCLIP
    +FORCEXYBILLBOARD
    +DOOMBOUNCE
    States
    {
      Spawn:
        RBLT ABCDEF 1
        Loop
        
      Death:
        TNT1 A 1
        //RBLT EEEEEEEEEEEEEEEEEEEE 1 A_FadeOut(0.05)
        Stop
    }
}

actor RifleBullet : Ammo
{
    +IGNORESKILL
    Inventory.MaxAmount 52
}

actor GrenadeInClip : Ammo // In this case it actually IS a clip!
{
    +IGNORESKILL
    Inventory.MaxAmount 7
}

actor MarathonGrenade
{
    Decal Scorch
    Radius 6
    Height 8
    Mass 1
    Speed 17
    Damage 4
    DamageType "Explosive"
    Scale 0.55
    //Gravity 0.11
    DeathSound "marathon/rifle/nadexpl"
    Projectile
    Obituary "$SAMSARA_MARATHON_OB_SLOT4_2"
    -NOGRAVITY
    +LOWGRAVITY
    +FORCERADIUSDMG
    +BLOODLESSIMPACT
    +EXTREMEDEATH
    //+GRENADETRAIL
    States
    {
      Spawn:
        NADE AAAAAAAAAAAAAAA 1 Bright A_SpawnItem("MarathonGrenadeSmoke")
        
      Spawn2:
        NADE A 1 Bright
        LOOP
        
      Death:
        TNT1 A 0 A_NoGravity
        XPLD A 4 Bright A_Explode(70+random(0, 20), 128)
        XPLD B 4 Bright 
        XPLD C 4 Bright
        XPLD D 4 Bright
        XPLD E 4 Bright
        XPLD F 4 Bright
        Stop
    }
}

actor MarathonGrenadeCoop : MarathonGrenade
{
    Speed 15
    +THRUSPECIES
    Species "Player"
    States
    {
      Death:
        TNT1 A 0 A_NoGravity
        XPLD A 4 Bright A_Explode(80+random(0, 20), 128)
        XPLD B 4 Bright 
        XPLD C 4 Bright
        XPLD D 4 Bright
        XPLD E 4 Bright
        XPLD F 4 Bright
        Stop
    }
}

actor MarathonGrenadeSmoke
{
    Radius 1
    Height 1
    Speed 0
    +NOGRAVITY
    -SOLID
    +NOCLIP
    +RANDOMIZE
    +CLIENTSIDEONLY
    Scale 0.15
    States
    {
      Spawn:
        TNT1 A 2
        FLME CD 1 BRIGHT
        MSMK ABCD 1
        stop
    }
}

// Alt fire hack

actor SamsaraMarathonRifleActive : Boolean {}
actor SamsaraMarathonRifleAltReloadWaitTime : Counter {}
actor SamsaraMarathonRifleAltReloadFireLockTime : Counter {}

actor SamsaraMarathonRifleAltFire : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleActive",1,"PickupCheck")
        stop

      // Ready
      PickupCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SynthFireRight",1,"PickupStart")
        stop

      // Fire
      PickupStart:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadable")
      PickupNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupAltFire")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupAltFire")
      PickupAltFireDry:
        TNT1 A 0 A_JumpIfInventory("AssaultClicked2",1,"PickupStop")
        TNT1 A 0 A_GiveInventory("AssaultClicked2",26)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        stop

      PickupReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAltFire")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupAltFire")
      FireReloadableDryCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupStop")
        goto PickupAltFireDry

      PickupAltFire:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAltFireDry")
        TNT1 A 0 A_GiveInventory("AssaultFiredS",26)
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleSecondaryAttackHandler")
        stop
    }
}

actor SamsaraMarathonRifleAltReload : Trigger
{
    States
    {
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleActive",1,"PickupCheck")
        stop

      // Ready
      PickupCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("AssaultFiredS",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,"PickupCheckModern")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckClassic")
        stop

      PickupCheckClassic:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",1,"PickupStop")
      PickupCheckClassicStart:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupReload")
        stop

      PickupCheckModern:
        TNT1 A 0 A_JumpIfInventory("SynthFireReload",1,1)
        goto PickupCheckClassic
        TNT1 A 0 A_JumpIfInventory("SynthFireRight",1,1)
        goto PickupCheckClassic
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"PickupCheckClassic")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupReload")
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"PickupReload")
        goto PickupCheckClassic

      // Reload (wait)
      PickupReload:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupReloadWaitTimeDecrement")
      PickupReloadWaitTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadWaitTime",14) // tics before ammo giving
        stop

      PickupReloadWaitTimeDecrement:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",1)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"PickupReloadWaitTimeDecrement2x")
      PickupReloadWaitTimeFinish:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadWaitTime",1,"PickupStop")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupReloadAmmo")
      PickupReloadFinish:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonRifleAltReloadFireLockTime",1,"PickupReloadFireLockTimeDecrement")
      PickupReloadFireLockTimeStart:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonRifleAltReloadFireLockTime",15) // tics before being able to alt fire
        stop

      PickupReloadWaitTimeDecrement2x:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadWaitTime",1)
        goto PickupReloadWaitTimeFinish

      // Reload (fire lock)
      PickupReloadFireLockTimeDecrement:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",1)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasDoubleFiringSpeed",1,"PickupReloadFireLockTimeDecrement2x")
        stop

      PickupReloadFireLockTimeDecrement2x:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonRifleAltReloadFireLockTime",1)
        stop

      // Reload (ammo)
      PickupReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("GrenadeInClip",0,"PickupReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,1)
        goto PickupReloadFinish
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("RocketAmmo",1)
        TNT1 A 0 A_GiveInventory("GrenadeInClip")
        loop
    }
}
