actor FusionChargeLevel: Counter { Inventory.MaxAmount 36 }
actor FusionChargan: Counter { Inventory.MaxAmount 7 }
actor UsingFusionPistol: Boolean {}

actor "Fusion Pistol" : Weapon
{
    Weapon.BobRangeX 0
    Weapon.BobStyle Smooth
    Weapon.SelectionOrder 1300
    Weapon.SlotNumber 3
    Inventory.PickupMessage "You picked up a Zeus Class Fusion Pistol!"
    Weapon.AmmoType1 "FusionBullet"
    Weapon.AmmoGive1 0
    Weapon.AmmoUse1 1
    Weapon.AmmoType2 "Cell"
    Weapon.AmmoGive2 20
    Weapon.AmmoUse2 0	
    +AMMO_OPTIONAL
    +NOALERT
    +INVENTORY.UNDROPPABLE
	Inventory.RestrictedTo "MarathonPlayer"
    Tag "Zeus Class Fusion Pistol"
    States
    {
      Spawn:
        FUSP A -1
        stop

      Ready:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,"ReadyModernReloadable")
      ReadyNonReloadable:
        FUSN A 1 A_WeaponReady
      ReadyAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyAmmoCheckReloadable")
        goto Ready

      ReadyModernReloadable:
        TNT1 A 0 A_JumpIfInventory("FusionBullet",0,"ReadyNonReloadable")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Cell",1,1)
        goto ReadyNonReloadable
        FUSN A 1 A_WeaponReady(WRF_ALLOWRELOAD)
        goto ReadyAmmoCheck

      ReadyAmmoCheckReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"Reload")
        goto Ready

      Deselect:
        TNT1 A 0 A_Lower
        FUSN A 1 A_Lower
        loop

      Select:
        TNT1 A 0 A_TakeInventory("UsingFists")
        TNT1 A 0 A_TakeInventory("UsingPistols")
        TNT1 A 0 A_TakeInventory("UsingDualPistols")
        TNT1 A 0 A_TakeInventory("UsingSMG")
        TNT1 A 0 A_TakeInventory("UsingPacifier")
        TNT1 A 0 A_TakeInventory("UsingShotguns")
        TNT1 A 0 A_TakeInventory("UsingDualShotguns")
        //TNT1 A 0 A_TakeInventory("UsingFusionPistol")
        TNT1 A 0 A_TakeInventory("UsingAssaultRifle")
        TNT1 A 0 A_TakeInventory("UsingSpanker")
        TNT1 A 0 A_TakeInventory("UsingToasty")
        TNT1 A 0 A_TakeInventory("UsingWMC")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon2")
        //TNT1 A 0 A_TakeInventory("UsingMarathonInstagib")

        TNT1 A 0 A_GiveInventory("UsingFusionPistol")
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"SelectReloadAmmoCheck")
      Select2:
        TNT1 A 0 A_Raise
        FUSN A 1 A_Raise
        loop

      SelectReloadAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Select2")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"Select2")
      SelectReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("FusionBullet",0,"Select2")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Cell",1,1)
        goto Select2
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("Cell",1)
        TNT1 A 0 A_GiveInventory("FusionBullet")
        loop

      Fire:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireReloadable")
      FireNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireActual")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"FireActual")
        goto Ready

      FireReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireActual")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"FireActual")
      FireReloadableDryCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"Reload")
        goto Ready

      FireActual:
        FUSN A 1 A_AlertMonsters
        TNT1 A 0 A_GiveInventory("SamsaraMarathonFusionPistolPrimaryAttackHandler")
      FireFinish:
        FUSN A 2 A_Light2
        FUSN B 2 Bright A_Light1 
        FUSN C 2 A_Light0
        FUSN D 3
        TNT1 A 0 A_ReFire
        goto Ready

      AltFire:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"AltFireReloadable")
      AltFireNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"AltFireChargeStart")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"AltFireChargeStart")
        goto Ready

      AltFireReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"AltFireChargeStart")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"AltFireChargeStart")
      AltFireReloadableDryCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"Reload")
        goto Ready

      AltFireChargeStart:
        FUSN A 1 A_PlaySound("marathon/fusion/charge",CHAN_7)
        TNT1 A 0 A_GiveInventory("FusionChargan",5)
      AltFireCharge:
        FUSN A 5 A_JumpIfInventory("FusionChargan",0,"AltFireChargeIncrement")
        TNT1 A 0 A_GiveInventory("FusionChargan")
        TNT1 A 0 A_ReFire("AltFireCharge")
        TNT1 A 0 A_JumpIfInventory("FusionChargeLevel",1,"AltFireActual")
        TNT1 A 0 A_StopSound(CHAN_7)
        TNT1 A 0 A_TakeInventory("FusionChargan")
        goto Ready

      AltFireChargeIncrement:
        TNT1 A 0 A_TakeInventory("FusionChargan")
        TNT1 A 0 A_GiveInventory("FusionChargeLevel")
        TNT1 A 0 A_JumpIfInventory("FusionChargeLevel",0,"AltFireOvercharge")
        TNT1 A 0 A_JumpIfInventory("FusionChargeLevel",2,"AltFireChargeIncrementBeep")
      AltFireChargeIncrementFinish:
        FUSN E 2
        goto AltFireCharge

      AltFireChargeIncrementBeep:
        TNT1 A 0 A_PlaySound("marathon/fusion/beep",CHAN_WEAPON)
        goto AltFireChargeIncrementFinish

      AltFireOvercharge:
        TNT1 A 0 A_TakeInventory("FusionChargan")
        TNT1 A 0 A_TakeInventory("FusionChargeLevel")
        FUSN A 18 A_GiveInventory("SamsaraMarathonFusionPistolOverchargeAttackHandler")
        goto Ready

      AltFireActual:
        FUSN A 1 A_AlertMonsters
        TNT1 A 0 A_TakeInventory("FusionChargan")
        TNT1 A 0 A_TakeInventory("FusionChargeLevel")
        TNT1 A 0 A_GiveInventory("SamsaraMarathonFusionPistolSecondaryAttackHandler")
      AltChargeFireContinue:
        FUSN A 4 A_Light2
        FUSN B 4 Bright A_Light1
        FUSN C 4 A_Light0
        FUSN D 4
        TNT1 A 0 A_ReFire
        goto Ready

      Reload:
        FUSN A 1 Offset(0,44)
        FUSN A 1 Offset(0,56)
        FUSN A 1 Offset(0,68)
        FUSN A 1 Offset(0,80)
        FUSN A 1 Offset(0,92)
        FUSN A 1 Offset(0,104)
        FUSN A 1 Offset(0,116)
        FUSN A 17 Offset(0,128)
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"SelectReloadAmmo")
        goto Select2
    }
}

actor SamsaraMarathonFusionPistolPrimaryAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"PickupTakeAmmoReloadable")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/fusion/fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAttackDMUnderwater")
        TNT1 A 0 A_FireCustomMissile("FusionShot",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackDMUnderwater:
        TNT1 A 0 A_FireCustomMissile("FusionShotWater",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAttackCoopUnderwater")
        TNT1 A 0 A_FireCustomMissile("FusionShotCoop",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackCoopUnderwater:
        TNT1 A 0 A_FireCustomMissile("FusionShotWaterCoop",random(-1,1),false,0,6,0,random(-1,1))
        stop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Cell",1,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("FusionBullet",1)
        goto PickupAttack
    }
}

actor SamsaraMarathonFusionPistolSecondaryAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"PickupTakeAmmoReloadable")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/fusion/super",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAttackDMUnderwater")
        TNT1 A 0 A_FireCustomMissile("FusionSuper",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackDMUnderwater:
        TNT1 A 0 A_FireCustomMissile("FusionShotWater2",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAttackCoopUnderwater")
        TNT1 A 0 A_FireCustomMissile("FusionSuperCoop",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackCoopUnderwater:
        TNT1 A 0 A_FireCustomMissile("FusionShotWater2Coop",random(-1,1),false,0,6,0,random(-1,1))
        stop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Cell",4,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("FusionBullet",4)
        goto PickupAttack
    }
}

actor SamsaraMarathonFusionPistolOverchargeAttackHandler : Trigger
{
    States
    {
      // Ammo check stuff
      Pickup:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupCheckAmmoReloadable")
      PickupCheckAmmoNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Cell",1,"PickupTakeAmmoNonReloadable")
        stop

      PickupCheckAmmoReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("FusionBullet",1,"PickupTakeAmmoReloadable")
        stop

      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("hunter/explode",CHAN_WEAPON)
        TNT1 A 0 A_SetBlend("Blue",0.8,35)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("FusionPistolOvercharge",random(-1,1),false,0,6,0,random(-1,1))
        stop

      PickupAttackCoop:
        TNT1 A 0 A_FireCustomMissile("FusionPistolOverchargeCoop",random(-1,1),false,0,6,0,random(-1,1))
        stop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Cell",20,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("FusionBullet",20)
        goto PickupAttack
    }
}

actor FusionBullet : Ammo
{
    +IGNORESKILL
    Inventory.MaxAmount 20
}

actor FusionShot
{
    Decal DoomImpScorch
    Radius 12
    Height 16
    Speed 25
    Damage (random(40,50))
    DamageType "MarathonFusion"
    Scale 0.35
    DeathSound "marathon/fusion/hit"
    +FOILINVUL
    +PIERCEARMOR
    +BLOODLESSIMPACT
    +DONTREFLECT
    +NOEXTREMEDEATH
    Obituary "$SAMSARA_MARATHON_OB_SLOT3_1"
    Projectile
    States
    {
      Spawn:
        MA00 ABC 2 Bright A_JumpIf(waterlevel >= 2, "FuckWater")
        LOOP

      FuckWater:
        MA00 A 0 A_Stop
        MA00 A 0 A_Die
        goto Death

      Death:
        MA01 ABCD 2 Bright
        STOP
    }
}

actor FusionShotCoop : FusionShot
{
    Radius 6
    Height 8
    Speed 20
    +THRUSPECIES
    Species "Player"
}

actor FusionShotWater : FusionShot
{
    Damage 0
    States
    {
      Spawn:
        TNT1 A 0
      Death:
        TNT1 A 0 A_Stop
        TNT1 A 0 A_Explode(random(30,40),128)
        MA01 ABCD 2 Bright
        STOP
    }
}

actor FusionShotWaterCoop : FusionShotWater
{
    Radius 6
    Height 8
    Speed 20
    Species "Player"
    +THRUSPECIES
}

actor FusionSuper
{
    Decal Scorch
    Radius 20
    Height 24
    Speed 35
    Damage (random(90,120))
    DamageType "MarathonFusion"
    Scale 0.75
    DeathSound "marathon/fusion/hit"
    +FOILINVUL
    +PIERCEARMOR
    +BLOODLESSIMPACT
    +NOEXTREMEDEATH
    +DONTREFLECT
    Obituary "$SAMSARA_MARATHON_OB_SLOT3_1"
    Projectile
    States
    {
      Spawn:
        MA02 A 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 A 1 Bright A_SpawnItem("FusionTrail")
        MA02 A 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 A 1 Bright A_SpawnItem("FusionTrail")
        MA02 A 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 A 1 Bright A_SpawnItem("FusionTrail")
        MA02 B 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 B 1 Bright A_SpawnItem("FusionTrail")
        MA02 B 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 B 1 Bright A_SpawnItem("FusionTrail")
        MA02 B 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 B 1 Bright A_SpawnItem("FusionTrail")
        MA02 C 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 C 1 Bright A_SpawnItem("FusionTrail")
        MA02 C 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 C 1 Bright A_SpawnItem("FusionTrail")
        MA02 C 0 A_JumpIf(waterlevel >= 2, "FuckWater")
        MA02 C 1 Bright A_SpawnItem("FusionTrail")
        LOOP

      FuckWater:
        MA00 A 0 A_Stop
        MA00 A 0 A_Die
        goto Death

      Death:
        MA01 AB 5 Bright
        MA01 CD 4 Bright
        STOP
    }
}

actor FusionSuperCoop : FusionSuper
{
    Radius 10
    Height 12
    Speed 30
    +THRUSPECIES
    Species "Player"
}

actor FusionShotWater2
{
    Damage 0
    States
    {
      Spawn:
        TNT1 A 0
      Death:
        TNT1 A 0 A_Stop
        TNT1 A 0 A_Explode(random(80,100),128)
        MA01 AB 5 bright
        MA01 CD 4 bright
        STOP
    }
}

actor FusionShotWater2Coop : FusionShotWater2
{
    Radius 10
    Height 12
    Speed 30
    Species "Player"
    +THRUSPECIES
}

actor FusionTrail
{
    +RANDOMIZE
    +NOCLIP
    +NOGRAVITY
    Speed 0
    Scale 0.75
    +CLIENTSIDEONLY
    states
    {
      Spawn:
        TNT1 A 2
        FSCT ABC 2 BRIGHT
        stop
    }
}

actor FusionPistolOvercharge
{
    Radius 8
    Height 8

    +NOTIMEFREEZE
    +DONTBLAST
    +DONTREFLECT
    +DONTSPLASH
    +NOTRIGGER
    +NOTONAUTOMAP
    +SKYEXPLODE
    +FOILINVUL
    +PIERCEARMOR
    +BLOODLESSIMPACT
    +NOEXTREMEDEATH

    Projectile

    DamageType "MarathonFusion"

    Obituary "$SAMSARA_MARATHON_OB_SLOT3_2"

    States
    {
        Spawn:
          TNT1 A 0
        Death:
          TNT1 A 0 A_Stop
          TNT1 A 0 A_Explode(512, 256)
          TNT1 A 1
          stop
    }
}

actor FusionPistolOverchargeCoop : FusionPistolOvercharge
{
    Species "Player"
    +THRUSPECIES
}
