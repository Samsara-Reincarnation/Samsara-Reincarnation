actor UsingSMG: Boolean {}

actor SMGClicked: Counter {}

actor "KKV-7 SMG Flechette" : Weapon// replaces SuperShotgun
{
    Weapon.BobRangeX 0
    Weapon.BobStyle Smooth
    Weapon.SelectionOrder 2200
    Weapon.SlotNumber 1
    Decal BulletChip
    Inventory.PickupMessage "You picked up a KKV-7 SMG Flechette!"
	Inventory.RestrictedTo "MarathonPlayer"
    Weapon.AmmoType1 "SmgBullet"
    Weapon.AmmoGive1 0
    Weapon.AmmoUse1 1
	Weapon.AmmoType2 "Clip"
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 32
    Tag "KKV-7 SMG Flechette"
    +AMMO_OPTIONAL
    +NOALERT
    +INVENTORY.UNDROPPABLE
    States
    {
      Spawn:
        FSMG A -1
        stop

      Ready:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",0,"ReadyModernReloadable")
      ReadyNonReloadable:
        HSMG A 1 A_WeaponReady
      ReadyCasingSound:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonCasingSoundHandler")
      ReadyAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReadyAmmoCheckReloadable")
        goto Ready

      ReadyModernReloadable:
        TNT1 A 0 A_JumpIfInventory("SmgBullet",0,"ReadyNonReloadable")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        goto ReadyNonReloadable
        HSMG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
        goto ReadyCasingSound

      ReadyAmmoCheckReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"Ready")
        TNT1 A 0 A_JumpIfInventory("SmgBullet",1,"Ready")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto Ready

      Deselect:
        TNT1 A 0 A_TakeInventory("SMGClicked")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_Lower
        HSMG A 1 A_Lower
        loop

      Select:
        TNT1 A 0 A_TakeInventory("UsingFists")
        TNT1 A 0 A_TakeInventory("UsingPistols")
        TNT1 A 0 A_TakeInventory("UsingDualPistols")
        //TNT1 A 0 A_TakeInventory("UsingSMG")
        TNT1 A 0 A_TakeInventory("UsingPacifier")
        TNT1 A 0 A_TakeInventory("UsingShotguns")
        TNT1 A 0 A_TakeInventory("UsingDualShotguns")
        TNT1 A 0 A_TakeInventory("UsingFusionPistol")
        TNT1 A 0 A_TakeInventory("UsingAssaultRifle")
        TNT1 A 0 A_TakeInventory("UsingSpanker")
        TNT1 A 0 A_TakeInventory("UsingToasty")
        TNT1 A 0 A_TakeInventory("UsingWMC")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon")
        TNT1 A 0 A_TakeInventory("UsingAlienWeapon2")
        //TNT1 A 0 A_TakeInventory("UsingMarathonInstagib")

        TNT1 A 0 A_GiveInventory("UsingSMG")
        TNT1 A 0 A_TakeInventory("SMGClicked")
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_Raise
        HSMG A 1 A_Raise
        loop

      Fire:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireReloadable")
      FireNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireActual")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"FireActual")
      FireDry:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("SMGClicked",1,"Ready")
        TNT1 A 0 A_GiveInventory("SMGClicked",3)
        TNT1 A 0 A_PlaySound("marathon/rifle/dryfire")
        goto Ready

      FireReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireActual")
        TNT1 A 0 A_JumpIfInventory("SmgBullet",1,"FireActual")
      FireReloadableDryCheck:
        TNT1 A 0 A_TakeInventory("MarathonCasingSound")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"Reload")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"Reload")
        goto FireDry

      FireActual:
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_GiveInventory("MarathonCasingSound")
        TNT1 A 0 A_FireCustomMissile("FlechetteCasingSpawner",0,false) // casing 1 spawns on first tic, no ammo checks here
      FireCasingSpawnerCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"FireCasingSpawnerReloadable")
      FireCasingSpawnerNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"FireCasingSpawner")
        TNT1 A 0 A_JumpIfInventory("Clip",2,"FireCasingSpawner")
      FireAttack:
        TNT1 A 0 A_GiveInventory("SamsaraMarathonSMGAttackHandler")
      FireFinish:
        HSMG B 1 Offset(0,27) Bright
        HSMG B 1 Offset(0,27) Bright A_Light2
        HSMG A 1 Offset(0,31) Bright A_Light1
        TNT1 A 0 A_Light0
        TNT1 A 0 A_ReFire
        goto Ready

      FireCasingSpawnerReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"FireCasingSpawner")
        TNT1 A 0 A_JumpIfInventory("SmgBullet",2,"FireCasingSpawner")
        goto FireAttack

      FireCasingSpawner:
        TNT1 A 0 A_FireCustomMissile("FlechetteCasingSpawner",0,false)
        goto FireAttack

      Reload:
        HSMG C 11
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"ReloadAmmo")
      ReloadFinish:
        TNT1 A 0 A_PlaySound("marathon/smg/reload")
        HSMG DE 11
        goto Ready

      ReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("SmgBullet",0,"ReloadFinish")
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_JumpIfInventory("Clip",1,1)
        goto ReloadFinish
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,2)
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,2)
        TNT1 A 0 A_TakeInventory("Clip",1)
        TNT1 A 0 A_GiveInventory("SmgBullet")
        loop
    }
}

actor SamsaraMarathonSMGAttackAmount : Counter { Inventory.MaxAmount 2 }

actor SamsaraMarathonSMGAttackHandler : Trigger
{
    States
    {
      // Loop stuff
      Pickup:
        TNT1 A 0 A_TakeInventory("SamsaraMarathonSMGAttackAmount") // reset
      PickupLoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraMarathonSMGAttackAmount",0,"PickupStop")
        TNT1 A 0 A_GiveInventory("SamsaraMarathonSMGAttackAmount")
      // Ammo check stuff
      PickupAmmoCheck:
        TNT1 A 0 A_JumpIfInventory("SamsaraReloadMode",1,"PickupAmmoCheckReloadable")
      PickupAmmoCheckNonReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",1,"PickupTakeAmmoNonReloadable")
        TNT1 A 0 A_JumpIfInventory("Clip",1,"PickupTakeAmmoNonReloadable")
        goto PickupLoop

      PickupAmmoCheckReloadable:
        TNT1 A 0 A_JumpIfInventory("SamsaraHasInfiniteAmmo",0,"PickupAttack")
        TNT1 A 0 A_JumpIfInventory("SmgBullet",1,"PickupTakeAmmoReloadable")
        goto PickupLoop
        
      // Attack stuff
      PickupAttack:
        TNT1 A 0 A_PlaySound("marathon/smg/fire",CHAN_WEAPON)
        TNT1 A 0 A_JumpIfInventory("SPModeOn",1,"PickupAttackCoop")
        TNT1 A 0 A_JumpIfInventory("CoopModeOn",1,"PickupAttackCoop")
      PickupAttackDM:
        TNT1 A 0 A_FireCustomMissile("MarathonSMGBullet",random(-10,10)/10.0,false,0,0,0,random(-10,10)/10.0)
        goto PickupLoop

      PickupAttackCoop:
        TNT1 A 0 A_JumpIfInventory("SamsaraCurrentWaterLevel",0,"PickupAttackCoopUnderwater")
        TNT1 A 0 A_FireCustomMissile("MarathonSMGBulletOverwater",random(-10,10)/10.0,false,0,0,0,random(-10,10)/10.0)
        goto PickupLoop

      PickupAttackCoopUnderwater:
        TNT1 A 0 A_FireCustomMissile("MarathonSMGBulletCoop",random(-10,10)/10.0,false,0,0,0,random(-10,10)/10.0)
        goto PickupLoop

      // Ammo taking stuff
      PickupTakeAmmoNonReloadable:
        TNT1 A 0 A_TakeInventory("Clip",1,TIF_NOTAKEINFINITE)
        goto PickupAttack

      PickupTakeAmmoReloadable:
        TNT1 A 0 A_TakeInventory("SmgBullet",1)
        goto PickupAttack
    }
}

actor SmgBullet : Ammo
{
    +IGNORESKILL
    Inventory.MaxAmount 32
}

actor MarathonSMGBullet : FastProjectile
{
    Damage (random(6,9))
    Radius 8
    Height 8
    Speed 100
    Projectile
    Obituary "$SAMSARA_MARATHON_OB_SLOT1"
    +BLOODSPLATTER
    +NOTIMEFREEZE
    +NOEXTREMEDEATH
    +THRUGHOST
    Alpha 1.0
    Decal Bulletchip
    States
    {
      Spawn:
        TNT1 A 1
        loop

      Death:
        TNT1 A 1 A_SpawnItem("MarathonPuff")
        stop

      XDeath:
        TNT1 A 1 A_PlaySound("puff/hit")
        stop

      Crash:
        TNT1 A 1 A_PlaySound("puff/ding")
        stop
    }
}

actor MarathonSMGBulletCoop : MarathonSMGBullet
{
    Radius 1
    Height 1
    Speed 80
    Damage (random(9,15))
    +THRUSPECIES
    Species "Player"
}

actor MarathonSMGBulletOverwater : MarathonSMGBullet
{
    Radius 1
    Height 1
    Speed 80
    Damage (random(8,10))
    +THRUSPECIES
    Species "Player"
}

actor FlechetteCasingSpawner
{
    Radius 1
    Height 1
    Speed 25
    PROJECTILE
    +CLIENTSIDEONLY
    States
    {
      Spawn:
        TNT1 A 1
        TNT1 A 0 A_Die
        Goto Death

      Death:
        TNT1 A 0 A_CustomMissile("FlechetteCasing",1,5,random(-80,-110),2,random(30,40))
        Stop
    }
}

actor FlechetteCasing
{ 
    Scale 0.25
    Radius 3
    Height 3
    Speed 7
    Mass 5
    BounceCount 1
    +CLIENTSIDEONLY
    +THRUACTORS +DROPOFF +MISSILE +NOTELEPORT +FLOORCLIP
    +FORCEXYBILLBOARD +DOOMBOUNCE
    States
    {
      Spawn:
        FLEC ABCDEF 1
        Loop

      Death:
        TNT1 A 1
        Stop
    }
}